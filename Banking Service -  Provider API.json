{
  "name": "Banking Service -  Provider API",
  "version": "1",
  "items": [
    {
      "type": "folder",
      "name": "Bank Sync",
      "filename": "Bank Sync",
      "seq": 7,
      "root": {
        "request": {
          "auth": {
            "mode": "none"
          }
        },
        "docs": "Please refer to the documentation for details on each individual function call.\n\nFor any further assistance, contact your enablement lead.",
        "meta": {
          "name": "Bank Sync",
          "seq": 7
        }
      },
      "items": [
        {
          "type": "http",
          "name": "POST /token",
          "filename": "POST -token.bru",
          "seq": 1,
          "settings": {},
          "tags": [],
          "request": {
            "url": "{{_preset_cloudId_baseUrl}}/oauth/token",
            "method": "POST",
            "headers": [
              {
                "name": "",
                "value": "",
                "enabled": false
              }
            ],
            "params": [],
            "body": {
              "mode": "formUrlEncoded",
              "formUrlEncoded": [
                {
                  "name": "grant_type",
                  "value": "client_credentials",
                  "enabled": true
                },
                {
                  "name": "client_id",
                  "value": "{{_preset_cloudId_clientId}}",
                  "enabled": true
                },
                {
                  "name": "client_secret",
                  "value": "{{_preset_cloudId_clientSecret}}",
                  "enabled": true
                },
                {
                  "name": "audience",
                  "value": "{{_preset_cloudId_audience}}",
                  "enabled": true
                }
              ],
              "multipartForm": [],
              "file": []
            },
            "script": {
              "res": "var jsonData = JSON.parse(responseBody);\n\nbru.setEnvVar(\"provider_auth_cloudId\", jsonData.token_type + ' ' +jsonData.access_token);"
            },
            "vars": {},
            "assertions": [],
            "tests": "",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "POST/ banks toCreate",
          "filename": "POST- banks toCreate.bru",
          "seq": 2,
          "settings": {},
          "tags": [],
          "request": {
            "url": "{{_preset_provider_baseUrl}}/v1/banks",
            "method": "POST",
            "headers": [
              {
                "name": "x-api-key",
                "value": "{{_preset_provider_apiKey}}",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "{{provider_auth_cloudId}}",
                "enabled": true
              },
              {
                "name": "",
                "value": "",
                "enabled": false
              }
            ],
            "params": [
              {
                "name": "",
                "value": "",
                "type": "query",
                "enabled": false
              }
            ],
            "body": {
              "mode": "json",
              "json": "{\r\n  \"data\": {\r\n      \"toCreate\": [\r\n        {\r\n        \"supportiframe\": true,\r\n        \"countryCode\": \"USA\",\r\n        \"name\": \"string\",\r\n        \"url\": \"string\",\r\n        \"externalRef\": \"a new random UUID\",\r\n          \"callbackURLs\": {\r\n            \"notification\": \"string\",\r\n            \"availableAccounts\": \"string\",\r\n            \"auth\": \"string\",\r\n            \"reAuth\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n  }\r\n}",
              "formUrlEncoded": [],
              "multipartForm": [],
              "file": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "",
            "docs": "Please take note of the generated `externalRef` and `principalID` from the response. You will need to provide these values to your Banking Service Enablement Lead to facilitate the bank enablement process.",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "POST/ banks toUpdate",
          "filename": "POST- banks toUpdate.bru",
          "seq": 3,
          "settings": {},
          "tags": [],
          "request": {
            "url": "{{_preset_provider_baseUrl}}/v1/banks",
            "method": "POST",
            "headers": [
              {
                "name": "x-api-key",
                "value": "{{_preset_provider_apiKey}}",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "{{provider_auth_cloudId}}",
                "enabled": true
              },
              {
                "name": "",
                "value": "",
                "enabled": false
              }
            ],
            "params": [
              {
                "name": "",
                "value": "",
                "type": "query",
                "enabled": false
              }
            ],
            "body": {
              "mode": "json",
              "json": "{\r\n  \"data\": {\r\n      \"toUpdate\": [\r\n        {\r\n        \"name\": \"string\",\r\n        \"principalId\": \"0a52818d-1e0c-4e64-848e-4d04f9e914e5\",\r\n        \"externalRef\": \"6ddd0723-eeca-4759-b4f9-90dbdc2de1775\",\r\n          \"callbackURLs\": {\r\n            \"notification\": \"string\",\r\n            \"availableAccounts\": \"string\",\r\n            \"auth\": \"string\",\r\n            \"reAuth\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n  }\r\n}",
              "formUrlEncoded": [],
              "multipartForm": [],
              "file": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "",
            "docs": "**Note:**\n\n- If you are updating the bank corresponding with your Postman Environment file:\n    - Use the `_preset_consumer_bankId` for `principalID`.\n    - Use your `aggregatorID` for `externalRef`.\n- If you are not using the bank corresponding to the Postman Environment file:\n    - Use the values stored on your end from the `toCreate` call.\n- If you do not have the `aggregatorID` information, please contact your enablement lead for assistance.",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "POST/ remove bank",
          "filename": "POST- remove bank.bru",
          "seq": 4,
          "settings": {},
          "tags": [],
          "request": {
            "url": "{{_preset_provider_baseUrl}}/v1/banks",
            "method": "POST",
            "headers": [
              {
                "name": "x-api-key",
                "value": "{{_preset_provider_apiKey}}",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "{{provider_auth_cloudId}}",
                "enabled": true
              },
              {
                "name": "",
                "value": "",
                "enabled": false
              }
            ],
            "params": [
              {
                "name": "",
                "value": "",
                "type": "query",
                "enabled": false
              }
            ],
            "body": {
              "mode": "json",
              "json": "{\r\n  \"data\": {\r\n    \"toRemove\": [\r\n      {\r\n        \"principalId\": \"b69acf4f-09b5-4aaf-b5b5-c4fe18b59f81\",\r\n        \"externalRef\": \"277fa160-a645-4a41-aa71-551cad1bde85\"\r\n      }\r\n    ]\r\n  }\r\n}",
              "formUrlEncoded": [],
              "multipartForm": [],
              "file": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "",
            "docs": "**Note:**\n\n- If you are updating the bank corresponding with your Postman Environment file:\n    - Use the `_preset_consumer_bankId` for `principalID`.\n    - Use your `aggregatorID` for `externalRef`.\n- If you are not using the bank corresponding to the Postman Environment file:\n    - Use the values stored on your end from the `toCreate` call.\n- If you do not have the `aggregatorID` information, please contact your enablement lead for assistance.",
            "auth": {
              "mode": "none"
            }
          }
        }
      ]
    },
    {
      "type": "folder",
      "name": "Onboarding",
      "filename": "Onboarding",
      "seq": 2,
      "root": {
        "request": {
          "auth": {
            "mode": "none"
          }
        },
        "meta": {
          "name": "Onboarding",
          "seq": 2
        }
      },
      "items": [
        {
          "type": "folder",
          "name": "Banking Service Offboarding",
          "filename": "Banking Service Offboarding",
          "seq": 3,
          "root": {
            "request": {
              "auth": {
                "mode": "none"
              }
            },
            "meta": {
              "name": "Banking Service Offboarding",
              "seq": 3
            }
          },
          "items": [
            {
              "type": "http",
              "name": "13: DELETE /bankaccount",
              "filename": "13- DELETE -bankaccount.bru",
              "seq": 1,
              "settings": {},
              "tags": [],
              "request": {
                "url": "{{_preset_consumer_baseUrl}}/organisations/{{consumer_organisationId}}/companies/{{consumer_companyId}}/bankaccounts/{{consumer_bankAccountId}}",
                "method": "DELETE",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "x-application",
                    "value": "{{_preset_consumer_xApplication}}",
                    "enabled": true
                  },
                  {
                    "name": "Authorization",
                    "value": "Bearer {{consumer_jwt}}",
                    "enabled": true
                  }
                ],
                "params": [],
                "body": {
                  "mode": "multipartForm",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {
                  "res": "//Assert response code 204\ntest(\"Status code is 204\", function () {\n    expect(res.getStatus()).to.equal(204);\n});"
                },
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            },
            {
              "type": "http",
              "name": "14: POST /notification",
              "filename": "14- POST -notification.bru",
              "seq": 2,
              "settings": {},
              "tags": [],
              "request": {
                "url": "http://",
                "method": "POST",
                "headers": [],
                "params": [],
                "body": {
                  "mode": "text",
                  "text": "{\r\n  \"type\": \"resourceDeleted\",\r\n  \"resource\": {\r\n    \"id\": \"36aed119-675f-4507-9da3-06a5914d95ee\",\r\n    \"type\": \"bankAccount\",\r\n    \"url\": \"NA\"\r\n  },\r\n  \"additionalData\": {\r\n    \"externalId\": \"13b437a2-e0bb-4d06-8dc1-618ea2b6a723:0b035aef-9e1e-406e-9815-06409757f05e\",\r\n    \"bankId\": \"10aaeee6-4691-4443-8198-df39aaa8007c\"\r\n  }\r\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            },
            {
              "type": "http",
              "name": "15: GET /bankaccountId",
              "filename": "15- GET -bankaccountId.bru",
              "seq": 3,
              "settings": {},
              "tags": [],
              "request": {
                "url": "{{_preset_consumer_baseUrl}}/organisations/{{consumer_organisationId}}/companies/{{consumer_companyId}}/bankaccounts/{{consumer_bankAccountId}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "x-application",
                    "value": "{{_preset_consumer_xApplication}}",
                    "enabled": true
                  },
                  {
                    "name": "Authorization",
                    "value": "Bearer {{consumer_jwt}}",
                    "enabled": true
                  }
                ],
                "params": [],
                "body": {
                  "mode": "json",
                  "json": "",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {
                  "res": "//Assert account is active\ntest(\"Bank account has been cancelled\", function () {\n    var jsonData = res.getBody();\n    expect(jsonData.status).to.eql(\"cancelled\");\n});\n\n//Assert response status code is 200\ntest(\"Status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});"
                },
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Banking Service Onboarding",
          "filename": "Banking Service Onboarding",
          "seq": 1,
          "root": {
            "request": {
              "auth": {
                "mode": "none"
              }
            },
            "meta": {
              "name": "Banking Service Onboarding",
              "seq": 1
            }
          },
          "items": [
            {
              "type": "http",
              "name": "1: POST /organisations",
              "filename": "1- POST -organisations.bru",
              "seq": 1,
              "settings": {},
              "tags": [],
              "request": {
                "url": "{{_preset_consumer_baseUrl}}/organisations",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "x-application",
                    "value": "{{_preset_consumer_xApplication}}",
                    "enabled": true
                  },
                  {
                    "name": "x-signature",
                    "value": "{{consumer_request_signature}}",
                    "enabled": true
                  },
                  {
                    "name": "x-nonce",
                    "value": "{{consumer_request_nonce}}",
                    "enabled": true
                  }
                ],
                "params": [],
                "body": {
                  "mode": "json",
                  "json": "{\"company\":{\"name\":\"TestCompany\",\"postalCode\":\"NE139AA\",\"standardIndustrialCode\":\"99\",\"vatNumber\":\"123456789\",\"languageCode\":\"en-GB\"},\"crmId\":\"123456789\",\"user\":{\"emailAddress\":\"peter.yates@sage.com\",\"identity\":\"1001\"}}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {
                  "req": "const _ = require('underscore');\nconst url = require('url');\nconst _s = require('underscore.string');\nconst crypto = require('crypto');\nconst { SSL_OP_MICROSOFT_BIG_SSLV3_BUFFER } = require('constants');\n \nfunction stripQueryString(route) {\n    return _s.strLeft(route, '?');\n}\n \nfunction uuidv4() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n      var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n      return v.toString(16);\n    });\n  }\n \n \nfunction getHMAC(data, signingKey, hashFunction, encodingMethod){\n    signingKey = signingKey;\n    hashFunction = hashFunction || 'sha256';\n    encodingMethod = encodingMethod || 'base64';\n \n    var hmac = crypto.createHmac(hashFunction, signingKey);\n    hmac.update(data);\n    var hmacToReturn = hmac.digest(encodingMethod);\n    return hmacToReturn\n}\n \nfunction signRequest (originalRoute, method, signingKey,  body) {\n \n    let route = originalRoute;\n \n    const encodeURIComponentRfc3986 = (str) => {\n        return encodeURIComponent(str).replace(/[!'()*]/g, (c) => (`%${c.charCodeAt(0).toString(16).toUpperCase()}`));\n    };\n \n \n    const params = [];\n    if (body) {\n        const base64 = Buffer.from(JSON.stringify(body)).toString('base64');\n        params.push({ name: 'body', value: encodeURIComponentRfc3986(base64) });\n    }\n \n    const parsed = url.parse(route, true);\n    const queryParams = parsed.query;\n    if (queryParams && !_.isEmpty(queryParams)) {\n        const mapped = _.map(queryParams, (value, key) => ({ name: encodeURIComponentRfc3986(key), value: encodeURIComponentRfc3986(value) }));\n        params.push(...mapped);\n    }\n \n    // eslint-disable-next-line no-param-reassign\n    route = stripQueryString(route);\n \n    const query = _.chain(params)\n        .sortBy((obj) => obj.name)\n        .map((obj) => `${obj.name}=${obj.value}`)\n        .value()\n        .join('&');\n    const steps1And2 = method.toUpperCase();\n    const steps3And4 = encodeURIComponentRfc3986(route.toLowerCase());\n    const steps5And6 = encodeURIComponentRfc3986(query);\n    const step7 = encodeURIComponentRfc3986(nonce);\n \n    const signatureBase = `${steps1And2}&${steps3And4}&${steps5And6}&${step7}`;\n \n    signingKey += '&null'; // eslint-disable-line no-param-reassign\n \n    let signature = getHMAC(signatureBase,signingKey, \"sha1\",\"base64\");\n \n    return signature;\n}\n \nlet nonce = uuidv4()\nbru.setEnvVar(\"consumer_request_nonce\", nonce);\nconsole.log(nonce)\n \nlet currentURL = bru.interpolate(req.url);\nlet currentBody = bru.interpolate(req.body)\nlet currentMethod = req.method;\n \nlet signingKey = bru.getEnvVar('_preset_consumer_application_signingKey')\n \nlet signature = signRequest(currentURL, currentMethod, signingKey,  currentBody)\nconsole.log(signature)\n \nbru.setEnvVar(\"consumer_request_signature\", signature);",
                  "res": "var jsonData = res.body;\n \nbru.setEnvVar(\"consumer_organisationId\", jsonData.organisationId);\nbru.setEnvVar(\"consumer_companyId\", jsonData.companies[0]);\nbru.setEnvVar(\"consumer_organisation_signingKey\", jsonData.token);"
                },
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            },
            {
              "type": "http",
              "name": "2: GET /accessToken - Company",
              "filename": "2- GET -accessToken - Company.bru",
              "seq": 2,
              "settings": {
                "encodeUrl": true
              },
              "tags": [],
              "request": {
                "url": "{{_preset_consumer_baseUrl}}/accesstoken",
                "method": "GET",
                "headers": [
                  {
                    "name": "X-Organisation-Id",
                    "value": "{{consumer_organisationId}}",
                    "enabled": true
                  },
                  {
                    "name": "X-Company-Id",
                    "value": "{{consumer_companyId}}",
                    "enabled": true
                  },
                  {
                    "name": "X-Nonce",
                    "value": "{{consumer_request_nonce}}",
                    "enabled": true
                  },
                  {
                    "name": "X-Signature",
                    "value": "{{consumer_request_signature}}",
                    "enabled": true
                  },
                  {
                    "name": "X-Application",
                    "value": "{{_preset_consumer_xApplication}}",
                    "enabled": true
                  }
                ],
                "params": [],
                "body": {
                  "mode": "multipartForm",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {
                  "req": "const _ = require('underscore');\nconst url = require('url');\nconst _s = require('underscore.string');\nconst crypto = require('crypto');\nconst { SSL_OP_MICROSOFT_BIG_SSLV3_BUFFER } = require('constants');\n\nfunction stripQueryString(route) {\n    return _s.strLeft(route, '?');\n}\n\nfunction uuidv4() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n      var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n      return v.toString(16);\n    });\n  }\n\n\nfunction getHMAC(data, signingKey, hashFunction, encodingMethod){\n    signingKey = signingKey;\n    hashFunction = hashFunction || 'sha256';\n    encodingMethod = encodingMethod || 'base64';\n\n    var hmac = crypto.createHmac(hashFunction, signingKey);\n    hmac.update(data);\n    var hmacToReturn = hmac.digest(encodingMethod);\n    return hmacToReturn\n}\n\nfunction signRequest (originalRoute, method, signingKey,  body) {\n\n    let route = originalRoute;\n\n    const encodeURIComponentRfc3986 = (str) => {\n        return encodeURIComponent(str).replace(/[!'()*]/g, (c) => (`%${c.charCodeAt(0).toString(16).toUpperCase()}`));\n    };\n\n\n\n    const params = [];\n    if (body) {\n        const base64 = Buffer.from(JSON.stringify(body)).toString('base64');\n        params.push({ name: 'body', value: encodeURIComponentRfc3986(base64) });\n    }\n\n    const parsed = url.parse(route, true);\n    const queryParams = parsed.query;\n    if (queryParams && !_.isEmpty(queryParams)) {\n        const mapped = _.map(queryParams, (value, key) => ({ name: encodeURIComponentRfc3986(key), value: encodeURIComponentRfc3986(value) }));\n        params.push(...mapped);\n    }\n\n    // eslint-disable-next-line no-param-reassign\n    route = stripQueryString(route);\n\n    const query = _.chain(params)\n        .sortBy((obj) => obj.name)\n        .map((obj) => `${obj.name}=${obj.value}`)\n        .value()\n        .join('&');\n  \n    const steps1And2 = method.toUpperCase();\n    const steps3And4 = encodeURIComponentRfc3986(route.toLowerCase());\n    const steps5And6 = encodeURIComponentRfc3986(query);\n    const step7 = encodeURIComponentRfc3986(nonce);\n\n    const signatureBase = `${steps1And2}&${steps3And4}&${steps5And6}&${step7}`;\n\n    signingKey += '&null'; // eslint-disable-line no-param-reassign\n\n    let signature = getHMAC(signatureBase,signingKey, \"sha1\",\"base64\");\n\n    return signature;\n}\n\nlet nonce = uuidv4()\nbru.setEnvVar(\"consumer_request_nonce\", nonce);\n\nlet currentURL = bru.interpolate(req.url);\nlet currentBody = bru.interpolate(req.body)\nlet currentMethod = req.method;\n\nlet signingKey = bru.getEnvVar('consumer_organisation_signingKey')\n\nlet signature = signRequest(currentURL, currentMethod, signingKey,  currentBody)\n\nbru.setEnvVar(\"consumer_request_signature\", signature);\n",
                  "res": "var jsonData = res.body;\nbru.setEnvVar(\"consumer_jwt\", jsonData.jwt);\n"
                },
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "",
                "auth": {
                  "mode": "inherit"
                }
              }
            },
            {
              "type": "http",
              "name": "3: GET /bank",
              "filename": "3- GET -bank.bru",
              "seq": 4,
              "settings": {},
              "tags": [],
              "request": {
                "url": "{{_preset_consumer_baseUrl}}/banks/{{_preset_consumer_bankId}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "x-application",
                    "value": "{{_preset_consumer_xApplication}}",
                    "enabled": true
                  }
                ],
                "params": [],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {
                  "res": "//Set the bank Id\nvar jsonData = res.body;\nbru.setEnvVar(\"_preset_consumer_bankId\", jsonData.bankId);\n\n\n//Assert response Code = 200\ntest(\"Response status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\n\n"
                },
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "gets meta data information about the service including supported countries and their character codes",
                "auth": {
                  "mode": "none"
                }
              }
            },
            {
              "type": "http",
              "name": "4: GET /indirectlinkaccount",
              "filename": "4- GET -indirectlinkaccount.bru",
              "seq": 5,
              "settings": {
                "encodeUrl": false
              },
              "tags": [],
              "request": {
                "url": "{{_preset_consumer_baseUrl}}/organisations/{{consumer_organisationId}}/companies/{{consumer_companyId}}/indirectlinkaccount?bankid={{_preset_consumer_bankId}}&web=true",
                "method": "GET",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "x-application",
                    "value": "{{_preset_consumer_xApplication}}",
                    "enabled": true
                  },
                  {
                    "name": "Authorization",
                    "value": "Bearer {{consumer_jwt}}",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "bankid",
                    "value": "{{_preset_consumer_bankId}}",
                    "type": "query",
                    "enabled": true
                  },
                  {
                    "name": "web",
                    "value": "true",
                    "type": "query",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {
                  "req": "req.setMaxRedirects(0)",
                  "res": "//Save consumer_indirectPollRoute as variable to be used in GET/indirectlinkaccount (RESULT) when posting to Banking Service\nvar jsonData = res.body;\nbru.setEnvVar(\"consumer_indirectPollRoute\", jsonData.pollRoute);\n"
                },
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            },
            {
              "type": "http",
              "name": "7: POST /token",
              "filename": "7- POST -token.bru",
              "seq": 8,
              "settings": {},
              "tags": [],
              "request": {
                "url": "{{_preset_cloudId_baseUrl}}/oauth/token",
                "method": "POST",
                "headers": [
                  {
                    "name": "",
                    "value": "",
                    "enabled": false
                  }
                ],
                "params": [],
                "body": {
                  "mode": "formUrlEncoded",
                  "formUrlEncoded": [
                    {
                      "name": "grant_type",
                      "value": "client_credentials",
                      "enabled": true
                    },
                    {
                      "name": "client_id",
                      "value": "{{_preset_cloudId_clientId}}",
                      "enabled": true
                    },
                    {
                      "name": "client_secret",
                      "value": "{{_preset_cloudId_clientSecret}}",
                      "enabled": true
                    },
                    {
                      "name": "audience",
                      "value": "{{_preset_cloudId_audience}}",
                      "enabled": true
                    }
                  ],
                  "multipartForm": [],
                  "file": []
                },
                "script": {
                  "res": "var jsonData = res.body;\n\nbru.setEnvVar(\"provider_auth_cloudId\", jsonData.token_type + ' ' +jsonData.access_token);"
                },
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            },
            {
              "type": "http",
              "name": "8: PATCH /authorisations",
              "filename": "8- PATCH -authorisations.bru",
              "seq": 9,
              "settings": {},
              "tags": [],
              "request": {
                "url": "{{_preset_provider_baseUrl}}/v1/authorisations/4f2de470-efee-4f06-a659-1aef01c75558",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "x-api-key",
                    "value": "{{_preset_provider_apiKey}}",
                    "enabled": true
                  },
                  {
                    "name": "Authorization",
                    "value": "{{provider_auth_cloudId}}",
                    "enabled": true
                  },
                  {
                    "name": "",
                    "value": "",
                    "enabled": false
                  }
                ],
                "params": [],
                "body": {
                  "mode": "json",
                  "json": "{\r\n  \"data\": {\r\n    \"status\": \"success\",\r\n    \"bankAccounts\":\r\n    [\r\n        {\r\n            \"bankAccountExternalId\": \"MTAwMDoxMQ==\",\r\n            \"accountName\": \"Current Account\",\r\n            \"bankIdentifier\": \"1000\",\r\n            \"branchIdentifier\": \"string\",\r\n            \"accountIdentifier\": \"134256\"\r\n        },\r\n            {\r\n            \"bankAccountExternalId\": \"RTAwMDoxF2==\",\r\n            \"accountName\": \"Savings Account\",\r\n            \"bankIdentifier\": \"1000\",\r\n            \"branchIdentifier\": \"string\",\r\n            \"accountIdentifier\": \"1342567\"\r\n        }\r\n    ]\r\n  }\r\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            },
            {
              "type": "http",
              "name": "5: POST /notification",
              "filename": "5- POST -notification.bru",
              "seq": 5,
              "settings": {
                "encodeUrl": true
              },
              "tags": [],
              "request": {
                "url": "yourURL/notification",
                "method": "POST",
                "headers": [],
                "params": [],
                "body": {
                  "mode": "json",
                  "json": "// This notification is automatically sent from the indirect link account. \r\n// The purpose of this step is to demonstrate the API interaction from the banking service to your notification endpoint. \r\n\r\n// Example payload:\r\n{\r\n    \"type\": \"resourceCreated\",\r\n    \"resource\": {\r\n        \"id\": \"a7d66d27-e9ab-40b4-850a-447a541ca263\",\r\n        \"type\": \"authorisation\",\r\n        \"url\": \"NA\"\r\n    },\r\n    \"additionalData\": {\r\n        \"bankId\": \"10aaeee6-4691-4443-8198-df39aaa8007c\"\r\n    }\r\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "",
                "auth": {
                  "mode": "inherit"
                }
              }
            },
            {
              "type": "http",
              "name": "6: GET /auth",
              "filename": "6- GET -auth.bru",
              "seq": 6,
              "settings": {
                "encodeUrl": true
              },
              "tags": [],
              "request": {
                "url": "yourURL/auth",
                "method": "GET",
                "headers": [],
                "params": [],
                "body": {
                  "mode": "json",
                  "json": "// This call is automatically sent from the indirect link account. \r\n// The purpose of this step is to demonstrate the API interaction. ",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "",
                "auth": {
                  "mode": "inherit"
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Post to Banking Service",
          "filename": "Post to Banking Service",
          "seq": 2,
          "root": {
            "request": {
              "auth": {
                "mode": "none"
              }
            },
            "meta": {
              "name": "Post to Banking Service",
              "seq": 2
            }
          },
          "items": [
            {
              "type": "http",
              "name": "10: POST /bankaccounts",
              "filename": "10- POST -bankaccounts.bru",
              "seq": 2,
              "settings": {},
              "tags": [],
              "request": {
                "url": "{{_preset_consumer_baseUrl}}/organisations/{{consumer_organisationId}}/companies/{{consumer_companyId}}/bankaccounts",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "x-application",
                    "value": "{{_preset_consumer_xApplication}}",
                    "enabled": true
                  },
                  {
                    "name": "Authorization",
                    "value": "Bearer {{consumer_jwt}}",
                    "enabled": true
                  }
                ],
                "params": [],
                "body": {
                  "mode": "json",
                  "json": "{{consumer_post_bankaccount_request_body}}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {
                  "req": "var body = {\n\taccountType:\"DEBIT\",\n\taccountName: bru.getEnvVar('consumer_indirect_accountName'),\n    accountKey: bru.getEnvVar('consumer_indirect_accountKey'),\n    accountIdentifier: bru.getEnvVar('consumer_indirect_accountIdentifier'),\n    bankIdentifier: bru.getEnvVar('consumer_indirect_bankIdentifier'),\n\tbranchIdentifier:\"Newcastle\",\n\tdefaultCurrency:\"GBP\",\n\tbankId: bru.getEnvVar('_preset_consumer_bankId'),\n\trequestedStartDate: \"2017-06-30T00:00:00.000Z\"\n}\n\nbru.setEnvVar('consumer_post_bankaccount_request_body', JSON.stringify(body));",
                  "res": "var jsonData = res.body;\n\nbru.setEnvVar(\"consumer_bankAccountId\", jsonData.bankAccountId);\nbru.setEnvVar(\"consumer_bankAccountLastTransactionId\", jsonData.lastTransactionId || 0);\n\n//Assert the bank account is in status pending\ntest(\"Bank account has been posted (pending)\", function () {\n    var jsonData = res.getBody();\n    expect(jsonData.status).to.eql(\"pending\");\n});\n\n//Assert response Code = 201\ntest(\"Response status code is 201\", function () {\n    expect(res.getStatus()).to.equal(201);\n});\n"
                },
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            },
            {
              "type": "http",
              "name": "11: POST /notification",
              "filename": "11- POST -notification.bru",
              "seq": 3,
              "settings": {},
              "tags": [],
              "request": {
                "url": "yourURL/notification",
                "method": "GET",
                "headers": [],
                "params": [],
                "body": {
                  "mode": "json",
                  "json": "// This notification is automatically sent when a POST has been sent to the /bankaccounts endpoint. \r\n// The purpose of this step is to demonstrate the API interaction. \r\n\r\n// Example payload:\r\n\r\n{\r\n  \"type\": \"resourceCreated\",\r\n  \"resource\": {\r\n    \"id\": \"36aed119-675f-4507-9da3-06a5914d95ee\",\r\n    \"type\": \"bankAccount\",\r\n    \"url\": \"https://somethingorother.com\"\r\n  },\r\n  \"additionalData\": {\r\n    \"externalId\": \"13b437a2-e0bb-4d06-8dc1-618ea2b6a723:0b035aef-9e1e-406e-9815-06409757f05e\"\r\n  }\r\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            },
            {
              "type": "http",
              "name": "12: GET /bankaccountId",
              "filename": "12- GET -bankaccountId.bru",
              "seq": 4,
              "settings": {},
              "tags": [],
              "request": {
                "url": "{{_preset_consumer_baseUrl}}/organisations/{{consumer_organisationId}}/companies/{{consumer_companyId}}/bankaccounts/{{consumer_bankAccountId}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "x-application",
                    "value": "{{_preset_consumer_xApplication}}",
                    "enabled": true
                  },
                  {
                    "name": "Authorization",
                    "value": "Bearer {{consumer_jwt}}",
                    "enabled": true
                  }
                ],
                "params": [],
                "body": {
                  "mode": "json",
                  "json": "",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {
                  "req": "//Adding a delay to start the test to set the account to active\n//setTimeout(function(){}, [60000]);",
                  "res": "//Assert account is active\ntest(\"Bank account posted\", function () {\n    var jsonData = res.getBody();\n    expect(jsonData.status).to.eql(\"active\");\n});\n\n//Assert response status code is 200\ntest(\"Status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});"
                },
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            },
            {
              "type": "http",
              "name": "9: GET /indirectlinkaccount (RESULT)",
              "filename": "9- GET -indirectlinkaccount (RESULT).bru",
              "seq": 1,
              "settings": {},
              "tags": [],
              "request": {
                "url": "{{consumer_indirectPollRoute}}",
                "method": "GET",
                "headers": [],
                "params": [],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {
                  "req": "req.setMaxRedirects(0)",
                  "res": "var jsonData = res.body;\nbru.setEnvVar(\"consumer_indirect_accountName\", jsonData.account.accountName);\nbru.setEnvVar(\"consumer_indirect_accountKey\", jsonData.account.accountKey || \"1\");\nbru.setEnvVar(\"consumer_indirect_accountIdentifier\", jsonData.account.accountIdentifier);\nbru.setEnvVar(\"consumer_indirect_bankIdentifier\", jsonData.account.bankIdentifier || null);\nbru.setEnvVar(\"consumer_indirect_bankAccountExternalId\", jsonData.account.bankAccountExternalId);\n\n//Assert response Code = 200\ntest(\"Response status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\n\n//Assert the indirectLinkAccount is correct\ntest(\"Account has been linked\", function (){\n    expect(jsonData.success).to.eql(true)\n}\n);"
                },
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            },
            {
              "type": "http",
              "name": "POST /accountqueries",
              "filename": "POST -accountqueries.bru",
              "seq": 5,
              "settings": {},
              "tags": [],
              "request": {
                "url": "{{_preset_provider_baseUrl}}/v1/accountqueries",
                "method": "POST",
                "headers": [
                  {
                    "name": "x-api-key",
                    "value": "{{_preset_provider_apiKey}}",
                    "enabled": true
                  },
                  {
                    "name": "Authorization",
                    "value": "{{provider_auth_cloudId}}",
                    "enabled": true
                  },
                  {
                    "name": "",
                    "value": "",
                    "enabled": false
                  }
                ],
                "params": [],
                "body": {
                  "mode": "json",
                  "json": "{\r\n\"data\": {\r\n    \"bankId\": \"{{_preset_consumer_bankId}}\",\r\n    \"externalId\": \"{{consumer_indirect_bankAccountExternalId}}\"\r\n    }\r\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            },
            {
              "type": "http",
              "name": "POST /accountqueries_1",
              "filename": "POST -accountqueries_1.bru",
              "seq": 6,
              "settings": {},
              "tags": [],
              "request": {
                "url": "{{_preset_provider_baseUrl}}/v1/accountqueries",
                "method": "POST",
                "headers": [
                  {
                    "name": "x-api-key",
                    "value": "{{_preset_provider_apiKey}}",
                    "enabled": true
                  },
                  {
                    "name": "Authorization",
                    "value": "{{provider_auth_cloudId}}",
                    "enabled": true
                  },
                  {
                    "name": "",
                    "value": "",
                    "enabled": false
                  }
                ],
                "params": [],
                "body": {
                  "mode": "json",
                  "json": "{\r\n\"data\": {\r\n    \"bankId\": \"{{_preset_consumer_bankId}}\",\r\n    \"externalId\": \"{{consumer_indirect_bankAccountExternalId}}\"\r\n    }\r\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            }
          ]
        }
      ]
    },
    {
      "type": "folder",
      "name": "Multi-Account Linking",
      "filename": "Multi-Account Linking",
      "seq": 5,
      "root": {
        "request": {
          "auth": {
            "mode": "none"
          }
        },
        "meta": {
          "name": "Multi-Account Linking",
          "seq": 5
        }
      },
      "items": [
        {
          "type": "folder",
          "name": "Multiaccount linking",
          "filename": "Multiaccount linking",
          "seq": 3,
          "root": {
            "request": {
              "auth": {
                "mode": "none"
              }
            },
            "meta": {
              "name": "Multiaccount linking",
              "seq": 3
            }
          },
          "items": [
            {
              "type": "http",
              "name": "13: GET /availableaccounts",
              "filename": "13- GET -availableaccounts.bru",
              "seq": 1,
              "settings": {},
              "tags": [],
              "request": {
                "url": "{{_preset_consumer_baseUrl}}/organisations/{{consumer_organisationId}}/companies/{{consumer_companyId}}/availablebankaccounts?bankAccountIds={{consumer_bankAccountId}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "x-application",
                    "value": "{{_preset_consumer_xApplication}}",
                    "enabled": true
                  },
                  {
                    "name": "Authorization",
                    "value": "Bearer {{consumer_jwt}}",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "bankAccountIds",
                    "value": "{{consumer_bankAccountId}}",
                    "type": "query",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {
                  "res": "//Assert response Code = 200\ntest(\"Response status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\n"
                },
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            },
            {
              "type": "http",
              "name": "14: GET /availableaccounts 2nd time",
              "filename": "14- GET -availableaccounts 2nd time.bru",
              "seq": 2,
              "settings": {},
              "tags": [],
              "request": {
                "url": "{{_preset_consumer_baseUrl}}/organisations/{{consumer_organisationId}}/companies/{{consumer_companyId}}/availablebankaccounts?bankAccountIds={{consumer_bankAccountId}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "x-application",
                    "value": "{{_preset_consumer_xApplication}}",
                    "enabled": true
                  },
                  {
                    "name": "Authorization",
                    "value": "Bearer {{consumer_jwt}}",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "bankAccountIds",
                    "value": "{{consumer_bankAccountId}}",
                    "type": "query",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {
                  "req": "//Adding a delay to start the test to get the available accounts\n//setTimeout(function(){}, [10000]);",
                  "res": "var jsonData = JSON.parse(responseBody);\n\n//Save bankAccountCandidateId01 as variable and use it in the POST/linkavailableaccount request, in the body\n\nif (jsonData.availableAccounts[0].metadata.connected == false){\n        bru.setEnvVar(\"bankAccountCandidateId01\", jsonData.availableAccounts[0].bankAccountCandidateId);\n        test(\"Bank account candidate 01 has been selected\", function(){\n            bru.getEnvVar(\"bankAccountCandidateId01\");\n            console.log(\"First account not connected\");\n        });\n    }\n    else if (jsonData.availableAccounts[1].metadata.connected == false){\n            bru.setEnvVar(\"bankAccountCandidateId01\", jsonData.availableAccounts[1].bankAccountCandidateId);\n            test(\"Bank account candidate 01 has been selected\", function(){\n                bru.getEnvVar(\"bankAccountCandidateId01\");\n                console.log(\"Second account not connected\");\n            });\n    }; \n\n//Check if we have already 2 available bank accounts linked. If we don't have more accounts, it will jump the second POST/linkavailablebankaccount\nif (jsonData.availableAccounts[2]){\n    if (jsonData.availableAccounts[2].metadata.connected == false){\n            bru.setEnvVar(\"bankAccountCandidateId02\", jsonData.availableAccounts[2].bankAccountCandidateId);\n            test(\"Bank account candidate 02 has been selected\", function(){\n                bru.getEnvVar(\"bankAccountCandidateId02\");\n                console.log(\"Third account not connected\");\n            });\n    }\n    else if (jsonData.availableAccounts[3]){\n        if (jsonData.availableAccounts[3].metadata.connected == false){\n                    bru.setEnvVar(\"bankAccountCandidateId02\", jsonData.availableAccounts[3].bankAccountCandidateId);\n                    test(\"Bank account candidate 02 has been selected\", function(){\n                    bru.getEnvVar(\"bankAccountCandidateId02\");\n                    console.log(\"Fourth account not connected\");\n                });\n            }\n        } \n    }\nelse {\n        console.log (\"There isn't a second available account in the list to link\");\n        bru.setEnvVar(\"bankAccountCandidateId02\", null);\n        bru.setNextRequest();\n}\n\n\n//Assert response Code = 200\ntest(\"Response status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\n\n"
                },
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            },
            {
              "type": "http",
              "name": "15: POST /linkavailablebankaccount",
              "filename": "15- POST -linkavailablebankaccount.bru",
              "seq": 3,
              "settings": {},
              "tags": [],
              "request": {
                "url": "{{_preset_consumer_baseUrl}}/organisations/{{consumer_organisationId}}/companies/{{consumer_companyId}}/linkavailablebankaccount",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "x-application",
                    "value": "{{_preset_consumer_xApplication}}",
                    "enabled": true
                  },
                  {
                    "name": "Authorization",
                    "value": "Bearer {{consumer_jwt}}",
                    "enabled": true
                  }
                ],
                "params": [],
                "body": {
                  "mode": "json",
                  "json": "{\n    \"bankAccountCandidateId\": \"{{bankAccountCandidateId01}}\",\n    \"requestedStartDate\": \"2016-06-17T00:00:00.000Z\"\n}\n\n",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {
                  "res": "//Assert response Code = 200\ntest(\"Response status code is 201\", function () {\n    expect(res.getStatus()).to.equal(201);\n});\n\n/*Checks if it exists a second bank account in the list of available. If it exists, it will get posted in the next request. If not, it will continue without posting*/\nbankAccountCandidate2 = bru.getEnvVar('bankAccountCandidateId02');\nif (bankAccountCandidate2 == null){\n    console.log(\"it won't run test for accountid 2\");\n    console.log(bankAccountCandidate2);\n    bru.setNextRequest(\"CheckAccountsStatus\");\n}\nelse {\n    console.log(\"it will run test for accountId2\");\n    bru.setNextRequest();\n}"
                },
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            },
            {
              "type": "http",
              "name": "16: POST /linkavailablebankaccount02",
              "filename": "16- POST -linkavailablebankaccount02.bru",
              "seq": 4,
              "settings": {},
              "tags": [],
              "request": {
                "url": "{{_preset_consumer_baseUrl}}/organisations/{{consumer_organisationId}}/companies/{{consumer_companyId}}/linkavailablebankaccount",
                "method": "POST",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "x-application",
                    "value": "{{_preset_consumer_xApplication}}",
                    "enabled": true
                  },
                  {
                    "name": "Authorization",
                    "value": "Bearer {{consumer_jwt}}",
                    "enabled": true
                  }
                ],
                "params": [],
                "body": {
                  "mode": "json",
                  "json": "{\n    \"bankAccountCandidateId\": \"{{bankAccountCandidateId02}}\",\n    \"requestedStartDate\": \"2016-06-17T00:00:00.000Z\"\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {
                  "res": "//Assert response Code = 201\ntest(\"Response status code is 201\", function () {\n    expect(res.getStatus()).to.equal(201);\n});"
                },
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            },
            {
              "type": "http",
              "name": "17: CheckAccountsStatus",
              "filename": "17- CheckAccountsStatus.bru",
              "seq": 5,
              "settings": {},
              "tags": [],
              "request": {
                "url": "{{_preset_consumer_baseUrl}}/organisations/{{consumer_organisationId}}/companies/{{consumer_companyId}}/availablebankaccounts?bankAccountIds={{consumer_bankAccountId}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "x-application",
                    "value": "{{_preset_consumer_xApplication}}",
                    "enabled": true
                  },
                  {
                    "name": "Authorization",
                    "value": "Bearer {{consumer_jwt}}",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "bankAccountIds",
                    "value": "{{consumer_bankAccountId}}",
                    "type": "query",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {
                  "res": "//Assert response Code = 200\ntest(\"Response status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\n\n\n//Check the bankaccounts linked are now in status connected\n\nvar jsonData = JSON.parse(responseBody);\nvar linkedAccount01 = bru.getEnvVar('bankAccountCandidateId01');\nvar linkedAccount02 = bru.getEnvVar('bankAccountCandidateId02');\n\n//Checking the first linked account\nvar bankAccountInArray = _.find(jsonData.availableAccounts, {\n bankAccountCandidateId:linkedAccount01\n})\nif (bankAccountInArray.bankAccountCandidateId == linkedAccount01){\n     test(\"Bank account candidate 01 is linked\", function (){\n        expect(bankAccountInArray.metadata.connected).to.eql(true);\n    })\n}\n\nvar bankAccountInArray = _.find(jsonData.availableAccounts, {\n bankAccountCandidateId:linkedAccount02\n})\nif (linkedAccount02 !=null){\n    if (bankAccountInArray.bankAccountCandidateId == linkedAccount02){\n        test(\"Bank account candidate 02 is linked\", function (){\n            expect(bankAccountInArray.metadata.connected).to.eql(true);\n        })\n    }\n}\n"
                },
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            }
          ]
        }
      ]
    },
    {
      "type": "folder",
      "name": "Posting Statements",
      "filename": "Posting Statements",
      "seq": 3,
      "root": {
        "request": {
          "auth": {
            "mode": "none"
          }
        },
        "meta": {
          "name": "Posting Statements",
          "seq": 3
        }
      },
      "items": [
        {
          "type": "folder",
          "name": "Banking Service Offboarding",
          "filename": "Banking Service Offboarding",
          "seq": 4,
          "root": {
            "request": {
              "auth": {
                "mode": "none"
              }
            },
            "meta": {
              "name": "Banking Service Offboarding",
              "seq": 4
            }
          },
          "items": [
            {
              "type": "http",
              "name": "17: DELETE /bankaccount",
              "filename": "17- DELETE -bankaccount.bru",
              "seq": 1,
              "settings": {},
              "tags": [],
              "request": {
                "url": "{{_preset_consumer_baseUrl}}/organisations/{{consumer_organisationId}}/companies/{{consumer_companyId}}/bankaccounts/{{consumer_bankAccountId}}",
                "method": "DELETE",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "x-application",
                    "value": "{{_preset_consumer_xApplication}}",
                    "enabled": true
                  },
                  {
                    "name": "Authorization",
                    "value": "Bearer {{consumer_jwt}}",
                    "enabled": true
                  }
                ],
                "params": [],
                "body": {
                  "mode": "multipartForm",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {
                  "res": "//Assert response code 204\ntest(\"Status code is 204\", function () {\n    expect(res.getStatus()).to.equal(204);\n});"
                },
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            },
            {
              "type": "http",
              "name": "18: POST /notification",
              "filename": "18- POST -notification.bru",
              "seq": 2,
              "settings": {},
              "tags": [],
              "request": {
                "url": "http://",
                "method": "GET",
                "headers": [],
                "params": [],
                "body": {
                  "mode": "text",
                  "text": "{\r\n  \"type\": \"resourceDeleted\",\r\n  \"resource\": {\r\n    \"id\": \"36aed119-675f-4507-9da3-06a5914d95ee\",\r\n    \"type\": \"bankAccount\",\r\n    \"url\": \"NA\"\r\n  },\r\n  \"additionalData\": {\r\n    \"externalId\": \"13b437a2-e0bb-4d06-8dc1-618ea2b6a723:0b035aef-9e1e-406e-9815-06409757f05e\",\r\n    \"bankId\": \"10aaeee6-4691-4443-8198-df39aaa8007c\"\r\n  }\r\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            },
            {
              "type": "http",
              "name": "19: GET /bankaccountId",
              "filename": "19- GET -bankaccountId.bru",
              "seq": 3,
              "settings": {},
              "tags": [],
              "request": {
                "url": "{{_preset_consumer_baseUrl}}/organisations/{{consumer_organisationId}}/companies/{{consumer_companyId}}/bankaccounts/{{consumer_bankAccountId}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "x-application",
                    "value": "{{_preset_consumer_xApplication}}",
                    "enabled": true
                  },
                  {
                    "name": "Authorization",
                    "value": "Bearer {{consumer_jwt}}",
                    "enabled": true
                  }
                ],
                "params": [],
                "body": {
                  "mode": "json",
                  "json": "",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {
                  "res": "//Assert account is active\ntest(\"Bank account has been cancelled\", function () {\n    var jsonData = res.getBody();\n    expect(jsonData.status).to.eql(\"cancelled\");\n});\n\n//Assert response status code is 200\ntest(\"Status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});"
                },
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "Posting Statements",
          "filename": "Posting Statements",
          "seq": 3,
          "root": {
            "request": {
              "auth": {
                "mode": "none"
              }
            },
            "meta": {
              "name": "Posting Statements",
              "seq": 3
            }
          },
          "items": [
            {
              "type": "http",
              "name": "13: POST /token",
              "filename": "13- POST -token.bru",
              "seq": 1,
              "settings": {},
              "tags": [],
              "request": {
                "url": "{{_preset_cloudId_baseUrl}}/oauth/token",
                "method": "POST",
                "headers": [
                  {
                    "name": "",
                    "value": "",
                    "enabled": false
                  }
                ],
                "params": [],
                "body": {
                  "mode": "formUrlEncoded",
                  "formUrlEncoded": [
                    {
                      "name": "grant_type",
                      "value": "client_credentials",
                      "enabled": true
                    },
                    {
                      "name": "client_id",
                      "value": "{{_preset_cloudId_clientId}}",
                      "enabled": true
                    },
                    {
                      "name": "client_secret",
                      "value": "{{_preset_cloudId_clientSecret}}",
                      "enabled": true
                    },
                    {
                      "name": "audience",
                      "value": "{{_preset_cloudId_audience}}",
                      "enabled": true
                    }
                  ],
                  "multipartForm": [],
                  "file": []
                },
                "script": {
                  "res": "var jsonData = JSON.parse(responseBody);\n\nbru.setEnvVar(\"provider_auth_cloudId\", jsonData.token_type + ' ' +jsonData.access_token);"
                },
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            },
            {
              "type": "http",
              "name": "14: POST /statements",
              "filename": "14- POST -statements.bru",
              "seq": 2,
              "settings": {},
              "tags": [],
              "request": {
                "url": "{{_preset_provider_baseUrl}}/v1/statements",
                "method": "POST",
                "headers": [
                  {
                    "name": "x-api-key",
                    "value": "{{_preset_provider_apiKey}}",
                    "enabled": true
                  },
                  {
                    "name": "Authorization",
                    "value": "{{provider_auth_cloudId}}",
                    "enabled": true
                  },
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [],
                "body": {
                  "mode": "json",
                  "json": "{\r\n    \"data\": {\r\n        \"principalId\": \"{{consumer_bankAccountId}}\",\r\n        \"bankId\": \"{{_preset_consumer_bankId}}\",\r\n        \"expected\": {\r\n            \"transactionDetailsCount\": 2,\r\n            \"accountDetailsCount\": 1,\r\n            \"transactionCreditSum\": 100,\r\n            \"transactionDebitSum\": -100\r\n        },\r\n        \"accountDetails\": [\r\n            {\r\n                \"bankAccountId\": \"{{consumer_bankAccountId}}\",\r\n                \"status\": \"active\",\r\n                \"balances\": {\r\n                    \"ledgerBalance\": 0,\r\n                    \"ledgerBalanceDate\": \"2019-11-24T12:00:00.000Z\",\r\n                    \"availableBalance\": 0,\r\n                    \"availableBalanceDate\": \"2019-11-24T12:00:00.000Z\"\r\n                }\r\n            }\r\n        ],\r\n        \"transactionDetails\": [\r\n            {\r\n                \"uniqueId\": \"{{uniqueId_1}}\",\r\n                \"bankAccountId\": \"{{consumer_bankAccountId}}\",\r\n                \"transactionAmount\": 100,\r\n                \"transactionType\": \"CREDIT\",\r\n                \"transactionStatus\": \"posted\",\r\n                \"datePosted\": \"2019-11-02T23:00:12.000Z\",\r\n                \"dateUserInitiated\": \"2019-11-04T22:54:00.000Z\",\r\n                \"exchangeCurrency\": \"EUR\",\r\n                \"exchangeAmount\": 120,\r\n                \"checkNumber\": \"123456\",\r\n                \"referenceNumber\": \"00000001\",\r\n                \"description\": \"DEBIT DESCRIPTION {{uniqueId_1}}\",\r\n                \"payee\": {\r\n                    \"payeeDescription\": \"100001\",\r\n                    \"address1\": \"1 the something\",\r\n                    \"address2\": \"on some street\",\r\n                    \"address3\": \"on some estate\",\r\n                    \"city\": \"in a city\",\r\n                    \"state\": \"in a state\",\r\n                    \"postalCode\": \"MY POST CODE\",\r\n                    \"country\": \"GBR\",\r\n                    \"phoneNumber\": \"0091299291212\",\r\n                    \"payeeBankId\": \"123456\",\r\n                    \"payeeAccountId\": \"654321\"\r\n                },\r\n                \"coordinates\": {\r\n                    \"lat\": 0.9812,\r\n                    \"long\": 1.0238\r\n                },\r\n                \"narrative1\": \"DEBIT NARRATIVE {{uniqueId_1}}\",\r\n                \"narrative2\": \"DEBIT EXTENDED NARRATIVE {{uniqueId_1}}\",\r\n                \"category\": {\r\n                    \"topLevelCategory\": \"TopCategory\",\r\n                    \"subCategory\": \"SubCategory\",\r\n                    \"categoryId\": 12,\r\n                    \"standardIndustrialCode\": \"9089\"\r\n                }\r\n            },\r\n            {\r\n                \"uniqueId\": \"{{uniqueId_2}}\",\r\n                \"bankAccountId\": \"{{consumer_bankAccountId}}\",\r\n                \"transactionAmount\": -100,\r\n                \"transactionType\": \"DEBIT\",\r\n                \"transactionStatus\": \"posted\",\r\n                \"datePosted\": \"2019-11-02T23:00:12.000Z\",\r\n                \"dateUserInitiated\": \"2019-11-04T22:54:00.000Z\",\r\n                \"exchangeCurrency\": \"EUR\",\r\n                \"exchangeAmount\": -120,\r\n                \"checkNumber\": \"123456\",\r\n                \"referenceNumber\": \"00000002\",\r\n                \"description\": \"DEBIT DESCRIPTION {{uniqueId_2}}\",\r\n                \"payee\": {\r\n                    \"payeeDescription\": \"100001\",\r\n                    \"address1\": \"1 the something\",\r\n                    \"address2\": \"on some street\",\r\n                    \"address3\": \"on some estate\",\r\n                    \"city\": \"in a city\",\r\n                    \"state\": \"in a state\",\r\n                    \"postalCode\": \"MY POST CODE\",\r\n                    \"country\": \"GBR\",\r\n                    \"phoneNumber\": \"0091299291212\",\r\n                    \"payeeBankId\": \"123456\",\r\n                    \"payeeAccountId\": \"654321\"\r\n                },\r\n                \"coordinates\": {\r\n                    \"lat\": 0.9812,\r\n                    \"long\": 1.0238\r\n                },\r\n                \"narrative1\": \"DEBIT NARRATIVE {{uniqueId_2}}\",\r\n                \"narrative2\": \"DEBIT EXTENDED NARRATIVE {{uniqueId_2}}\",\r\n                \"category\": {\r\n                    \"topLevelCategory\": \"TopCategory\",\r\n                    \"subCategory\": \"SubCategory\",\r\n                    \"categoryId\": 12,\r\n                    \"standardIndustrialCode\": \"9089\"\r\n                }\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {
                  "req": "var guid = (() => {\n  const s4 = () => {\n    return Math.floor((1 + Math.random()) * 0x10000)\n               .toString(16)\n               .substring(1);\n  };\n\n  return () => `${s4()}${s4()}-${s4()}-${s4()}-${s4()}-${s4()}${s4()}${s4()}`;\n})();\n\nbru.setEnvVar('uniqueId_1', guid());\nbru.setEnvVar('uniqueId_2', guid());",
                  "res": "var jsonData = JSON.parse(responseBody);\n\nbru.setEnvVar('statementId', jsonData.data._id);"
                },
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            },
            {
              "type": "http",
              "name": "15: GET /statements",
              "filename": "15- GET -statements.bru",
              "seq": 3,
              "settings": {},
              "tags": [],
              "request": {
                "url": "{{_preset_provider_baseUrl}}/v1/statements/{{statementId}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "x-api-key",
                    "value": "{{_preset_provider_apiKey}}",
                    "enabled": true
                  },
                  {
                    "name": "Authorization",
                    "value": "{{provider_auth_cloudId}}",
                    "enabled": true
                  },
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [],
                "body": {
                  "mode": "json",
                  "json": "",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            },
            {
              "type": "http",
              "name": "16: GET /transactions (startIndex, endIndex)",
              "filename": "16- GET -transactions (startIndex, endIndex).bru",
              "seq": 4,
              "settings": {},
              "tags": [],
              "request": {
                "url": "{{_preset_consumer_baseUrl}}/organisations/{{consumer_organisationId}}/companies/{{consumer_companyId}}/bankaccounts/{{consumer_bankAccountId}}/transactions?startIndex={{consumer_bankAccountLastTransactionId}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "x-application",
                    "value": "{{_preset_consumer_xApplication}}",
                    "enabled": true
                  },
                  {
                    "name": "Authorization",
                    "value": "Bearer {{consumer_jwt}}",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "startIndex",
                    "value": "{{consumer_bankAccountLastTransactionId}}",
                    "type": "query",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {
                  "req": "var transactionId = bru.getEnvVar(\"consumer_bankAccountLastTransactionId\") || 0;\n\ntransactionId += 1;\n\nbru.setEnvVar(\"consumer_bankAccountLastTransactionId\", transactionId);",
                  "res": "//Assert status of the request is 200\ntest(\"Status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});\n\n//Assert the response contains a list of transactions\ntest(\"Response contains a list of transactions\", function () {\n    expect(JSON.stringify(res.getBody())).to.include(\"bankTransactionList\");\n});"
                },
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "Gets a list of transactions for this bank account by using lastTransactionId as the startIndex",
                "auth": {
                  "mode": "none"
                }
              }
            }
          ]
        }
      ]
    },
    {
      "type": "folder",
      "name": "Reuthorisation",
      "filename": "Reuthorisation",
      "seq": 4,
      "root": {
        "request": {
          "auth": {
            "mode": "none"
          }
        },
        "meta": {
          "name": "Reuthorisation",
          "seq": 4
        }
      },
      "items": [
        {
          "type": "folder",
          "name": "Reauth",
          "filename": "Reauth",
          "seq": 3,
          "root": {
            "request": {
              "auth": {
                "mode": "none"
              }
            },
            "meta": {
              "name": "Reauth",
              "seq": 3
            }
          },
          "items": [
            {
              "type": "http",
              "name": "13: POST /token",
              "filename": "13- POST -token.bru",
              "seq": 1,
              "settings": {},
              "tags": [],
              "request": {
                "url": "{{_preset_cloudId_baseUrl}}/oauth/token",
                "method": "POST",
                "headers": [
                  {
                    "name": "",
                    "value": "",
                    "enabled": false
                  }
                ],
                "params": [],
                "body": {
                  "mode": "formUrlEncoded",
                  "formUrlEncoded": [
                    {
                      "name": "grant_type",
                      "value": "client_credentials",
                      "enabled": true
                    },
                    {
                      "name": "client_id",
                      "value": "{{_preset_cloudId_clientId}}",
                      "enabled": true
                    },
                    {
                      "name": "client_secret",
                      "value": "{{_preset_cloudId_clientSecret}}",
                      "enabled": true
                    },
                    {
                      "name": "audience",
                      "value": "{{_preset_cloudId_audience}}",
                      "enabled": true
                    }
                  ],
                  "multipartForm": [],
                  "file": []
                },
                "script": {
                  "res": "var jsonData = JSON.parse(responseBody);\n\nbru.setEnvVar(\"provider_auth_cloudId\", jsonData.token_type + ' ' +jsonData.access_token);"
                },
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            },
            {
              "type": "http",
              "name": "14: POST /statements",
              "filename": "14- POST -statements.bru",
              "seq": 2,
              "settings": {},
              "tags": [],
              "request": {
                "url": "{{_preset_provider_baseUrl}}/v1/statements",
                "method": "POST",
                "headers": [
                  {
                    "name": "x-api-key",
                    "value": "{{_preset_provider_apiKey}}",
                    "enabled": true
                  },
                  {
                    "name": "Authorization",
                    "value": "{{provider_auth_cloudId}}",
                    "enabled": true
                  },
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  }
                ],
                "params": [],
                "body": {
                  "mode": "json",
                  "json": "{\r\n    \"data\": {\r\n        \"principalId\": \"{{consumer_bankAccountId}}\",\r\n        \"bankId\": \"{{_preset_consumer_bankId}}\",\r\n        \"expected\": {\r\n            \"transactionDetailsCount\": 0,\r\n            \"accountDetailsCount\": 1,\r\n            \"transactionCreditSum\": 0,\r\n            \"transactionDebitSum\": 0\r\n        },\r\n        \"accountDetails\": [\r\n            {\r\n                \"bankAccountId\": \"{{consumer_bankAccountId}}\",\r\n                \"status\": \"authRequired\"\r\n            }\r\n        ],\r\n        \"transactionDetails\": [\r\n            \r\n        ]\r\n    }\r\n}\r\n",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            },
            {
              "type": "http",
              "name": "15: GET /reauthaccount",
              "filename": "15- GET -reauthaccount.bru",
              "seq": 3,
              "settings": {},
              "tags": [],
              "request": {
                "url": "{{_preset_consumer_baseUrl}}/organisations/{{consumer_organisationId}}/companies/{{consumer_companyId}}/bankaccounts/{{consumer_bankAccountId}}/indirectauth?web=true",
                "method": "GET",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "x-application",
                    "value": "{{_preset_consumer_xApplication}}",
                    "enabled": true
                  },
                  {
                    "name": "Authorization",
                    "value": "Bearer {{consumer_jwt}}",
                    "enabled": true
                  }
                ],
                "params": [
                  {
                    "name": "web",
                    "value": "true",
                    "type": "query",
                    "enabled": true
                  }
                ],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {
                  "res": "//Save redirect link as variable\nvar jsonData = JSON.parse(responseBody);\nbru.setEnvVar(\"authentication_page_reauth\",jsonData.redirect);\n\n//Assert response Code = 302\ntest(\"Response status code is 302\", function () {\n    expect(res.getStatus()).to.equal(302);\n});"
                },
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            },
            {
              "type": "http",
              "name": "16: POST /notification",
              "filename": "16- POST -notification.bru",
              "seq": 4,
              "settings": {},
              "tags": [],
              "request": {
                "url": "yourURL/notifications",
                "method": "POST",
                "headers": [],
                "params": [],
                "body": {
                  "mode": "json",
                  "json": "// This notification is automatically sent from the indirectauth call.\r\n// The purpose of this step is to demonstrate the API interaction. \r\n\r\n// Example payload:\r\n\r\n{\r\n    \"type\": \"resourceCreated\",\r\n    \"resource\": {\r\n        \"id\": \"a7d66d27-e9ab-40b4-850a-447a541ca263\",\r\n        \"type\": \"authorisation\",\r\n        \"url\": \"NA\"\r\n    },\r\n    \"additionalData\": {\r\n        \"bankId\": \"10aaeee6-4691-4443-8198-df39aaa8007c\"\r\n    }\r\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            },
            {
              "type": "http",
              "name": "17: GET /authrefresh",
              "filename": "17- GET -authrefresh.bru",
              "seq": 5,
              "settings": {},
              "tags": [],
              "request": {
                "url": "yourURL/authrefresh",
                "method": "GET",
                "headers": [],
                "params": [],
                "body": {
                  "mode": "json",
                  "json": "// This call is automatically sent from the indirectauth call \r\n// The purpose of this step is to demonstrate the API interaction with the provider. ",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            },
            {
              "type": "http",
              "name": "18: POST /token",
              "filename": "18- POST -token.bru",
              "seq": 6,
              "settings": {},
              "tags": [],
              "request": {
                "url": "{{_preset_cloudId_baseUrl}}/oauth/token",
                "method": "POST",
                "headers": [
                  {
                    "name": "",
                    "value": "",
                    "enabled": false
                  }
                ],
                "params": [],
                "body": {
                  "mode": "formUrlEncoded",
                  "formUrlEncoded": [
                    {
                      "name": "grant_type",
                      "value": "client_credentials",
                      "enabled": true
                    },
                    {
                      "name": "client_id",
                      "value": "{{_preset_cloudId_clientId}}",
                      "enabled": true
                    },
                    {
                      "name": "client_secret",
                      "value": "{{_preset_cloudId_clientSecret}}",
                      "enabled": true
                    },
                    {
                      "name": "audience",
                      "value": "{{_preset_cloudId_audience}}",
                      "enabled": true
                    }
                  ],
                  "multipartForm": [],
                  "file": []
                },
                "script": {
                  "res": "var jsonData = JSON.parse(responseBody);\n\nbru.setEnvVar(\"provider_auth_cloudId\", jsonData.token_type + ' ' +jsonData.access_token);"
                },
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            },
            {
              "type": "http",
              "name": "19: PATCH /authorisations",
              "filename": "19- PATCH -authorisations.bru",
              "seq": 7,
              "settings": {},
              "tags": [],
              "request": {
                "url": "{{_preset_provider_baseUrl}}/v1/authorisations/{{authorisationId}}",
                "method": "PATCH",
                "headers": [
                  {
                    "name": "x-api-key",
                    "value": "{{_preset_provider_apiKey}}",
                    "enabled": true
                  },
                  {
                    "name": "Authorization",
                    "value": "{{provider_auth_cloudId}}",
                    "enabled": true
                  },
                  {
                    "name": "",
                    "value": "",
                    "enabled": false
                  }
                ],
                "params": [
                  {
                    "name": "",
                    "value": "",
                    "type": "query",
                    "enabled": false
                  }
                ],
                "body": {
                  "mode": "json",
                  "json": "\r\n{\r\n  \"data\": {\r\n    \"status\": \"success\"\r\n  }\r\n}",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            },
            {
              "type": "http",
              "name": "20: GET /bankaccountId",
              "filename": "20- GET -bankaccountId.bru",
              "seq": 8,
              "settings": {},
              "tags": [],
              "request": {
                "url": "{{_preset_consumer_baseUrl}}/organisations/{{consumer_organisationId}}/companies/{{consumer_companyId}}/bankaccounts/{{consumer_bankAccountId}}",
                "method": "GET",
                "headers": [
                  {
                    "name": "Content-Type",
                    "value": "application/json",
                    "enabled": true
                  },
                  {
                    "name": "x-application",
                    "value": "{{_preset_consumer_xApplication}}",
                    "enabled": true
                  },
                  {
                    "name": "Authorization",
                    "value": "Bearer {{consumer_jwt}}",
                    "enabled": true
                  }
                ],
                "params": [],
                "body": {
                  "mode": "json",
                  "json": "",
                  "formUrlEncoded": [],
                  "multipartForm": [],
                  "file": []
                },
                "script": {
                  "res": "//Assert bank account is active\ntest(\"Bank account is active\", function () {\n    var jsonData = res.getBody();\n    expect(jsonData.status).to.eql(\"active\");\n});"
                },
                "vars": {},
                "assertions": [],
                "tests": "",
                "docs": "",
                "auth": {
                  "mode": "none"
                }
              }
            }
          ]
        }
      ]
    },
    {
      "type": "folder",
      "name": "Banking Service Offboarding",
      "filename": "Banking Service Offboarding",
      "seq": 6,
      "root": {
        "request": {
          "auth": {
            "mode": "none"
          }
        },
        "meta": {
          "name": "Banking Service Offboarding",
          "seq": 6
        }
      },
      "items": [
        {
          "type": "http",
          "name": "20: DELETE /bankaccount",
          "filename": "20- DELETE -bankaccount.bru",
          "seq": 1,
          "settings": {},
          "tags": [],
          "request": {
            "url": "{{_preset_consumer_baseUrl}}/organisations/{{consumer_organisationId}}/companies/{{consumer_companyId}}/bankaccounts/{{consumer_bankAccountId}}",
            "method": "DELETE",
            "headers": [
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": true
              },
              {
                "name": "x-application",
                "value": "{{_preset_consumer_xApplication}}",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{consumer_jwt}}",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "multipartForm",
              "formUrlEncoded": [],
              "multipartForm": [],
              "file": []
            },
            "script": {
              "res": "//Assert response code 204\ntest(\"Status code is 204\", function () {\n    expect(res.getStatus()).to.equal(204);\n});"
            },
            "vars": {},
            "assertions": [],
            "tests": "",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "22: GET /bankaccountId",
          "filename": "22- GET -bankaccountId.bru",
          "seq": 3,
          "settings": {},
          "tags": [],
          "request": {
            "url": "{{_preset_consumer_baseUrl}}/organisations/{{consumer_organisationId}}/companies/{{consumer_companyId}}/bankaccounts/{{consumer_bankAccountId}}",
            "method": "GET",
            "headers": [
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": true
              },
              {
                "name": "x-application",
                "value": "{{_preset_consumer_xApplication}}",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{consumer_jwt}}",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "json",
              "json": "",
              "formUrlEncoded": [],
              "multipartForm": [],
              "file": []
            },
            "script": {
              "res": "//Assert account is active\ntest(\"Bank account has been cancelled\", function () {\n    var jsonData = res.getBody();\n    expect(jsonData.status).to.eql(\"cancelled\");\n});\n\n//Assert response status code is 200\ntest(\"Status code is 200\", function () {\n    expect(res.getStatus()).to.equal(200);\n});"
            },
            "vars": {},
            "assertions": [],
            "tests": "",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "21: POST /notification",
          "filename": "21- POST -notification.bru",
          "seq": 2,
          "settings": {},
          "tags": [],
          "request": {
            "url": "yourURL/notifications",
            "method": "POST",
            "headers": [],
            "params": [],
            "body": {
              "mode": "text",
              "text": "{\r\n  \"type\": \"resourceDeleted\",\r\n  \"resource\": {\r\n    \"id\": \"36aed119-675f-4507-9da3-06a5914d95ee\",\r\n    \"type\": \"bankAccount\",\r\n    \"url\": \"NA\"\r\n  },\r\n  \"additionalData\": {\r\n    \"externalId\": \"13b437a2-e0bb-4d06-8dc1-618ea2b6a723:0b035aef-9e1e-406e-9815-06409757f05e\",\r\n    \"bankId\": \"10aaeee6-4691-4443-8198-df39aaa8007c\"\r\n  }\r\n}",
              "formUrlEncoded": [],
              "multipartForm": [],
              "file": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "",
            "docs": "",
            "auth": {
              "mode": "none"
            }
          }
        }
      ]
    }
  ],
  "activeEnvironmentUid": "J77o8k3Z4diCaMkDylyLE",
  "environments": [
    {
      "variables": [
        {
          "name": "_preset_consumer_baseUrl",
          "value": "https://snd01us.sagebankdrive.com/api/v1",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "_preset_consumer_xApplication",
          "value": "sage.integrate.myproduct",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "_preset_consumer_application_signingKey",
          "value": "16484ccc541734aa4274c80e14577348e6540ab9a7bda8063968bbd19229612f",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "_preset_consumer_bankId",
          "value": "92c3264b-4835-44bf-a9df-0bfb29b6b327",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "_preset_provider_baseUrl",
          "value": "https://papi-snd01-us-east-1.sagebanking-sandbox.cloud",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "_preset_provider_apiKey",
          "value": "r9TiqJUorsauBkCq2LXOwKVscn65iVa4JWPdchGc",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "_preset_cloudId_baseUrl",
          "value": "https://id-shadow.sage.com",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "_preset_cloudId_clientId",
          "value": "WyXH2PNjY7QPO9ZBqsnGEG2rYXDG00TA",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "_preset_cloudId_clientSecret",
          "value": "S2VvY_kEpMshlmL-QDq1srBuFBOBwPBMeF_UhU072B8waZUhL6AIKRLdOey-S87H",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "_preset_cloudId_audience",
          "value": "sfdsbanking/sfdsBankingProvider-Pre",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "_preset_sts_baseUrl",
          "value": "https://qa.sagetokenservice.com/api/v1",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "_preset_sts_xProvider",
          "value": "integrate.my.provider",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "consumer_request_signature",
          "value": "ieeoX/Pj1JF4kEbmgL++3Irnqps=",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "provider_auth_cloudId",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "consumer_request_nonce",
          "value": "d21d784e-c440-43e7-9841-8a5f91efd592",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "consumer_signature",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "consumer_jwt",
          "value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJvcmdhbmlzYXRpb25JZCI6IjZmODlkMzdhLTkxOGItNDk4ZC1iZjcyLWIwNGQwY2E0NzE5OCIsImNvbXBhbnlJZCI6IjA0OTllYzcyLTNhM2EtNDhjMS04OTM0LWYxMzc4OWJkZWEwMyIsInJlcXVlc3RlZCI6Ii9hcGkvdjEvb3JnYW5pc2F0aW9ucy82Zjg5ZDM3YS05MThiLTQ5OGQtYmY3Mi1iMDRkMGNhNDcxOTgvY29tcGFuaWVzLzA0OTllYzcyLTNhM2EtNDhjMS04OTM0LWYxMzc4OWJkZWEwMyIsInNvdXJjZVByb2R1Y3QiOiJzYWdlLmludGVncmF0ZS5teXByb2R1Y3QiLCJraWQiOiIwYzhmZmE5MGU5NDMwZTAzY2FhMDc5ZGU4ZWVmYjMwYTEwNTBkYzU4NDA1YmEzODEwYTZhNjg4Y2M1NDgzZGVhIiwiaXNzIjoic2FnZS5zZXJ2aWNlLWZhYnJpYy5iYW5raW5nLnVzLnNuZDAxIiwiaWF0IjoxNzU1Nzc5ODEyLCJleHAiOjE3NTU3ODEwMTJ9.BAtBLZ_7iInsji5D8ApgA5i8yPOA65yaLBaDNyKvxDafC2PLYWpcZNWq9aN8Pz14lT2qQWEovyUTRhprCr1a8uU-UDsTHHXGs3STABm4mvhjvjnLVQuIDLB7VqzxHvEmsmtedXarjHvcWvpERF8RKjgXOs8GhMMVY_uSiqzTTPpjvDJp8s1NjaBCPxJsvXPS18Zg1aHQm933EFl_XQUX4qX43k9qrg-gEpvFrRXoTE8NCXo36mq-iPTBkHb7lQCBaPaefE8zwd1_iSWcG990_CRaYN8L7EaDDvLlIkivI5nAtMtagNSpDqXKuOHBkMbNMqsPPpE8yhqGR2Ew7s9EMg",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "consumer_organisationId",
          "value": "6f89d37a-918b-498d-bf72-b04d0ca47198",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "consumer_companyId",
          "value": "0499ec72-3a3a-48c1-8934-f13789bdea03",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "consumer_organisation_signingKey",
          "value": "0d49df2b676b263ebf49e2c80f79fe2e971d36b770cbcef4d296750fc3a89054",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "consumer_indirectPollRoute",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "consumer_indirect_accountName",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "consumer_indirect_accountKey",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "consumer_indirect_accountIdentifier",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "consumer_indirect_bankIdentifier",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "consumer_post_bankaccount_request_body",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "consumer_bankAccountId",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "consumer_bankAccountLastTransactionId",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "uniqueId_1",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "uniqueId_2",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "statementId",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "authorisationId",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "consumer_indirect_bankAccountExternalId",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        }
      ],
      "name": "Demo US Playground - Banking Service"
    },
    {
      "variables": [
        {
          "name": "_preset_consumer_baseUrl",
          "value": "https://snd01eu.sagebankdrive.com/api/v1",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "_preset_consumer_xApplication",
          "value": "sage.integrate.myproduct",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "_preset_consumer_application_signingKey",
          "value": "16484ccc541734aa4274c80e14577348e6540ab9a7bda8063968bbd19229612f",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "_preset_consumer_bankId",
          "value": "22c86929-af9f-4cac-897a-901c8d04e161",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "_preset_provider_baseUrl",
          "value": "https://papi-snd01-eu-west-1.sagebanking-sandbox.cloud",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "_preset_provider_apiKey",
          "value": "G77gXpxPmn71LYnAn7VsWQ7ZgTyoj7P52NeLV4C9",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "_preset_cloudId_baseUrl",
          "value": "https://id-shadow.sage.com",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "_preset_cloudId_clientId",
          "value": "j8ja6tFTiIBm6ZgzOZe9dmSSUISogvXq",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "_preset_cloudId_clientSecret",
          "value": "XiO6yeD5y97gth0nKV484RBBkicjC_cXmuUD8cnAyFqfgU9u8n6iAWKeetjqHRPV",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "_preset_cloudId_audience",
          "value": "sfdsbanking/sfdsBankingProvider-Pre",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "consumer_request_nonce",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "consumer_request_signature",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "consumer_organisationId",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "consumer_companyId",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "consumer_organisation_signingKey",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "consumer_signature",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "consumer_jwt",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "consumer_indirectPollRoute",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "provider_auth_cloudId",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "consumer_indirect_accountName",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "consumer_indirect_accountKey",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "consumer_indirect_accountIdentifier",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "consumer_indirect_bankIdentifier",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "consumer_indirect_bankAccountExternalId",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "consumer_post_bankaccount_request_body",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "consumer_bankAccountId",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "consumer_bankAccountLastTransactionId",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        }
      ],
      "name": "InvestecUK Sandbox Environment"
    },
    {
      "variables": [
        {
          "name": "_preset_consumer_baseUrl",
          "value": "https://snd01eu.sagebankdrive.com/api/v1",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "_preset_consumer_xApplication",
          "value": "sage.integrate.myproduct",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "_preset_consumer_application_signingKey",
          "value": "16484ccc541734aa4274c80e14577348e6540ab9a7bda8063968bbd19229612f",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "_preset_consumer_bankId",
          "value": "572f05e4-4546-4eae-8e86-f5d42df12f7a",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "_preset_provider_baseUrl",
          "value": "https://papi-snd01-eu-west-1.sagebanking-sandbox.cloud",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "_preset_cloudId_baseUrl",
          "value": "https://id-shadow.sage.com",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "_preset_cloudId_audience",
          "value": "sfdsbanking/sfdsBankingProvider-Pre",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "consumer_request_nonce",
          "value": "a09e84ac-b28e-411a-8ad0-11c8ec528938",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "consumer_request_signature",
          "value": "zWrp7Hod5P4tZ2xBC3Xw9y+tqEM=",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "consumer_organisationId",
          "value": "8ddd2b4b-fdc8-4aea-98df-976be244a849",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "consumer_companyId",
          "value": "bf374a9b-c73a-433f-b7cc-ae9cd0a37b03",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "consumer_organisation_signingKey",
          "value": "f9b641b5d15c9694f446dbc00d102f153067aaea2c4e6b020d4bc778f6fa85c5",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "consumer_signature",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "consumer_jwt",
          "value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJvcmdhbmlzYXRpb25JZCI6IjhkZGQyYjRiLWZkYzgtNGFlYS05OGRmLTk3NmJlMjQ0YTg0OSIsImNvbXBhbnlJZCI6ImJmMzc0YTliLWM3M2EtNDMzZi1iN2NjLWFlOWNkMGEzN2IwMyIsInJlcXVlc3RlZCI6Ii9hcGkvdjEvb3JnYW5pc2F0aW9ucy84ZGRkMmI0Yi1mZGM4LTRhZWEtOThkZi05NzZiZTI0NGE4NDkvY29tcGFuaWVzL2JmMzc0YTliLWM3M2EtNDMzZi1iN2NjLWFlOWNkMGEzN2IwMyIsInNvdXJjZVByb2R1Y3QiOiJzYWdlLmludGVncmF0ZS5teXByb2R1Y3QiLCJraWQiOiJiYTYzNWIxNTgyNGVjMmJkOTk5MWI3YjQ1ZTM3OWNlYTIzYmVlYWY2NTUyYTZmNjgwODQxNzdjNmMxYmIxYWM4IiwiaXNzIjoic2FnZS5zZXJ2aWNlLWZhYnJpYy5iYW5raW5nLmV1LnNuZDAxIiwiaWF0IjoxNzU1NTk1NzM0LCJleHAiOjE3NTU1OTY5MzR9.UwPVEW1Orye8W7y06tfwoC1y5Q7ujOyNCPsEM8rmidp089O3q9hqGFx-i83Xaf2pRDER1in591gLgmg5OFESs8eYnSs3l1BpJXrx0-zfKohgZ6zwRKvao8hyPsZsV1zgm3f4XGXRXRPT2gMc1i0_hRwNG3uW6Mkgy0Dtm1Euu6mNS_NFw6h9MKhKLXJXs1ADE2lrRAlMae3v8O3i44KkkWNW1vAfSEVeKWdSxMFp26rRJb9R6x3uh68lWQdQmox7S-4wl4HVNOXMl8zB59Rc_UzC2-dfmfbS1QWXeaIaZiGL3yucy_FH_UTTuKx3odxpY6IFasRhWUk2msKRp5wB9g",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "consumer_indirectPollRoute",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "provider_auth_cloudId",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "_preset_cloudId_clientSecret",
          "value": "",
          "enabled": true,
          "secret": true,
          "type": "text"
        },
        {
          "name": "_preset_provider_apiKey",
          "value": "",
          "enabled": true,
          "secret": true,
          "type": "text"
        },
        {
          "name": "_preset_cloudId_clientId",
          "value": "",
          "enabled": true,
          "secret": true,
          "type": "text"
        }
      ],
      "name": "Monzo Sandbox Environment"
    },
    {
      "variables": [
        {
          "name": "_preset_consumer_baseUrl",
          "value": "https://snd01eu.sagebankdrive.com/api/v1",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "_preset_consumer_xApplication",
          "value": "sage.integrate.myproduct",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "_preset_consumer_application_signingKey",
          "value": "16484ccc541734aa4274c80e14577348e6540ab9a7bda8063968bbd19229612f",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "_preset_consumer_bankId",
          "value": "b5931e82-74da-4fac-9902-e02a74a6402c",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "_preset_provider_baseUrl",
          "value": "https://papi-snd01-eu-west-1.sagebanking-sandbox.cloud",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "_preset_provider_apiKey",
          "value": "smfPkM35238Zs0zXrmgXE7liUI9XyQTs5i8ktM9o",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "_preset_cloudId_baseUrl",
          "value": "https://id-shadow.sage.com",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "_preset_cloudId_clientId",
          "value": "yfLOOwuWBbCHViLJMYpz95latbSuxHJk",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "_preset_cloudId_clientSecret",
          "value": "50i158EdAwDKUYg5jd0TS7yN9TThieWEIOpekb5l2sYVDjyQyG6Iyqwj7eOQkp1g",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "_preset_cloudId_audience",
          "value": "sfdsbanking/sfdsBankingProvider-Pre",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "consumer_request_nonce",
          "value": "c7226214-f741-4726-b8ce-6c520e4e0a50",
          "secret": false,
          "enabled": true,
          "type": "text"
        },
        {
          "name": "consumer_request_signature",
          "value": "4WxI49s2oZ4v553PC9MoYcZN4Yc=",
          "secret": false,
          "enabled": true,
          "type": "text"
        },
        {
          "name": "consumer_organisationId",
          "value": "ae32e827-e7e4-4ae2-8f06-ecc132aaae56",
          "secret": false,
          "enabled": true,
          "type": "text"
        },
        {
          "name": "consumer_companyId",
          "value": "5cc7a1ed-294f-475b-ab4b-e8edefb384a6",
          "secret": false,
          "enabled": true,
          "type": "text"
        },
        {
          "name": "consumer_organisation_signingKey",
          "value": "df38c7e0dddad4abf63502a3fbb1f57fe08f7fdb407bad392cf6aca7f911acae",
          "secret": false,
          "enabled": true,
          "type": "text"
        },
        {
          "name": "consumer_jwt",
          "value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJvcmdhbmlzYXRpb25JZCI6ImFlMzJlODI3LWU3ZTQtNGFlMi04ZjA2LWVjYzEzMmFhYWU1NiIsImNvbXBhbnlJZCI6IjVjYzdhMWVkLTI5NGYtNDc1Yi1hYjRiLWU4ZWRlZmIzODRhNiIsInJlcXVlc3RlZCI6Ii9hcGkvdjEvb3JnYW5pc2F0aW9ucy9hZTMyZTgyNy1lN2U0LTRhZTItOGYwNi1lY2MxMzJhYWFlNTYvY29tcGFuaWVzLzVjYzdhMWVkLTI5NGYtNDc1Yi1hYjRiLWU4ZWRlZmIzODRhNiIsInNvdXJjZVByb2R1Y3QiOiJzYWdlLmludGVncmF0ZS5teXByb2R1Y3QiLCJraWQiOiI5NzM1NDllMGNlODcwZjk5YmYzZGQ0YTBlNmRmOGRjOGQ2NmViMDU3ZDMwZGU0YmQ5ZjZlYzAzZjFiYTdiOTZlIiwiaXNzIjoic2FnZS5zZXJ2aWNlLWZhYnJpYy5iYW5raW5nLmV1LnNuZDAxIiwiaWF0IjoxNzU2MjIwNTQ1LCJleHAiOjE3NTYyMjE3NDV9.Yv2bRAFc1EQgSjEcutu4a-Yg9Jf9TwPZRn9N9bual540ILFP0kxJbA5TvSVuOXmq_NBjvOFNBrv3LUoR-_w6LlY4IUU_VS8TGw4E8wS8UXqOPXVeQ9mz403vzzOlJzoMZkF6Jwgwr7BwV1IFw3Xe5x0ZtKrmVBJDCvPMIY-DGdcU0PkxanBnFz_yZ33dKIFdT2ICIx3CFb1II9SkxvrxIM-Sutcoq7L_lYisuuanvQx2yeKwABi2Sm5UN-BuJdZiuhwRnlsQ7lAc3PHdzcpfnQ3h_hiANGOzFlsuY-JQv7VfEJHWns9uwInTJotJtdVu9XiN4xzgRh6Ido-zV_E55Q",
          "secret": false,
          "enabled": true,
          "type": "text"
        },
        {
          "name": "provider_auth_cloudId",
          "value": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IlJVUXlRME0wTWtOQk5rUkJOVGxETXpaQ056VXhPVVUyUkRZNU5EbEJOVVF6T0VSQk1EQXdNQSJ9.eyJpc3MiOiJodHRwczovL2lkLXNoYWRvdy5zYWdlLmNvbS8iLCJzdWIiOiJ5ZkxPT3d1V0JiQ0hWaUxKTVlwejk1bGF0YlN1eEhKa0BjbGllbnRzIiwiYXVkIjoic2Zkc2Jhbmtpbmcvc2Zkc0JhbmtpbmdQcm92aWRlci1QcmUiLCJpYXQiOjE3NTYyMjA3MDEsImV4cCI6MTc1NjI0OTUwMSwic2NvcGUiOiJQcm92aWRlckFwaSIsImd0eSI6ImNsaWVudC1jcmVkZW50aWFscyIsImF6cCI6InlmTE9Pd3VXQmJDSFZpTEpNWXB6OTVsYXRiU3V4SEprIn0.Y_nUxLclHQgF3xW-dHpL1OJ32_Ao-NR2-h1txzOxdBYDlu4SvnpoG83X6ekyUVpo80xIlW1ZoM78bQs9ThPp60baP-4Zg7Xx26QEvUCeZHdc2rW3dcnKCb9kwdNLiOHAHsFBj1Qn7Lft-aXVCbM3LRy0MMJhdDHYHhn5ydYnVwHUK_H_y-1s7IjM3deH0MzXfYXWN6PTWh1v8rQtgKJmPh8awzecohbSQuoPHVbD5L5iVpWkuYeYq4AnJAUBtVCwqnAOa-dfVw2IOZ6zo3CjzFrugBH37bEg4ZEP8RfvsE4Awu7y3mfmF0K6KV4_YWxy9344SyLYOZdleQsj14jYTQ",
          "secret": false,
          "enabled": true,
          "type": "text"
        },
        {
          "name": "consumer_indirectPollRoute",
          "value": "https://snd01eu.sagebankdrive.com/api/v1/indirectlinkaccountprogress?data=M3g5eWxZUkIwNUhkT2MyZThzVmZBWUw2SEh3NVVIZXM2dENpV203Vkl3ZmlyQnhWRHR3czJUTm5IZzBkYnNpTWhXL0tCcmJDUWI0NExmL0R1K3UvUzFmOUE5Y1UyQ1NmVkFXVmIyWWJVbEl2azZQQkhNUFIyT2g5VktjTS9wUTBjODZoWlhCWjJFWndzRktWUGNGMHIvQU1kMDJFMkNQVCtpaU9kMnRMMkR6c2dEeHdoYlJEY0lCUnkwdU5Qby8rM0NzWHhkWExqY04xeXlWWWN6bk9VWTIwT2djMU5xUWhoMnNZbDdEeG1DUERRUUtnTU5SL0Q4SWMvSno0TXFhWHBRajVIQWt6aEQ1YndZVWM3V0JSK1hoamtzTFloU011dWlaMmhZYlZwcGMwUDVFekFVSWdsWGxXM3F3Nm83VjZwM1pLd0toa0ZqREFzZWhNd0xtL0xNaXdJOUxMbW9LbWFmZ0JwQWhXeVVFPQ==&iv=d0adcb28c464b1293b86b24a8253a9e3&signature=14be9483aed40656e525418bcb065a8ce9cdf6e151a39a23156f4a42054d74059284a89517a826faafafc8cfe3d2c11481f1f1b49b208d71d13bed8892cdda4ce29c9ab11988b948d4883decd333f32e26c064f4af83b6e6d0010c476d44ceeaa2c14eb57af5d547b48afbc0ac35d4651ebc07c8e1e833d5038b4c3034f4ae47983778dc1c00c045771f1f45f187d6925147781586649c5fb53786b4355ddb1fd8e7fab961759b178a9f14562e9d1ff1b0b17673e0677f80548b2a3ac1f9248f4f917f20a331f7134e79a6fa14dce01d8f946ee80d1e8cdea1f346f9bc72f8e181dfc1894782f6fac48460ce26f8ddc4a265e3b35435563bb1bfc01e7252af88&nonce=c3e6f027-6aec-409a-9f7a-ad343c814ae3",
          "secret": false,
          "enabled": true,
          "type": "text"
        },
        {
          "name": "consumer_post_bankaccount_request_body",
          "value": "{\"accountType\":\"DEBIT\",\"accountName\":\"Current Account\",\"accountKey\":\"0ae2d932-340a-4745-884c-4095b807640a\",\"accountIdentifier\":\"134256\",\"bankIdentifier\":\"1000\",\"branchIdentifier\":\"Newcastle\",\"defaultCurrency\":\"GBP\",\"bankId\":\"b5931e82-74da-4fac-9902-e02a74a6402c\",\"requestedStartDate\":\"2017-06-30T00:00:00.000Z\"}",
          "secret": false,
          "enabled": true,
          "type": "text"
        },
        {
          "name": "consumer_indirect_accountName",
          "value": "Current Account",
          "secret": false,
          "enabled": true,
          "type": "text"
        },
        {
          "name": "consumer_indirect_accountKey",
          "value": "0ae2d932-340a-4745-884c-4095b807640a",
          "secret": false,
          "enabled": true,
          "type": "text"
        },
        {
          "name": "consumer_indirect_accountIdentifier",
          "value": "134256",
          "secret": false,
          "enabled": true,
          "type": "text"
        },
        {
          "name": "consumer_indirect_bankIdentifier",
          "value": "1000",
          "secret": false,
          "enabled": true,
          "type": "text"
        },
        {
          "name": "consumer_indirect_bankAccountExternalId",
          "value": "MTAwMDoxMQ==",
          "secret": false,
          "enabled": true,
          "type": "text"
        },
        {
          "name": "consumer_bankAccountLastTransactionId",
          "value": 0,
          "secret": false,
          "enabled": true,
          "type": "text"
        }
      ],
      "name": "Nedbank Sandbox Environment"
    },
    {
      "variables": [
        {
          "name": "productCode",
          "value": "sage50clouduki",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "productLicenseType",
          "value": "s50_professional",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "STSProvider",
          "value": "integrate.my.provider",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "STSApplication",
          "value": "sage.integrate.myproduct",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "STSLicenseData",
          "value": "{\\\"serial\\\":\\\"ACTIVE\\\"}",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "STSVersion",
          "value": "0",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "origin",
          "value": "Desktop",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "nasUrl",
          "value": "https://int-api.nas-eng.sage.com",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "sageNetworkBaseUrl",
          "value": "https://api-int.network-eng.sage.com",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "connectedBridgeURL",
          "value": "https://api.sandbox.sbc.sage.com/bridge/v4",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "organisationServiceURL",
          "value": "https://api.sandbox.sbc.sage.com/organisation/v1",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "sageIdURL",
          "value": "https://id-shadow.sage.com",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "sageIdAuthURL",
          "value": "https://id.auth-shadow.sage.com",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "client_id",
          "value": "2VTkNzE3St3yShVbZ2cnlkhQVBUHxves",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "auth_client_id",
          "value": "mhosoAIJ31nUO1YYbGnEcyTIACtvbhWN",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "client_secret",
          "value": "GEMglaz4WN9eWn5-ZPrwFv2_9EVRmrdZaDGSXBk7hIMBqVOjgpgKyG0jcI-okVPX",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "provisionAccountEmail",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "context_hint",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "provisionAccountIdempotency",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "provisionAccountBackOfficeId",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "provisionAccountExternalId",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "provisionAccountName",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "provisionAccountManagingAccountId",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "provisionAccountSubscriptionId",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "provisionAccountResponseAccountId",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "provisionAccountResponseUserId",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "provisionAccountResponseBusinessId",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "networkProductInstancesId",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "networkProductInstancesTenantId",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "networkProductInstancesProductCode",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "contextHintEncoded",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "connectorBlobUploadUrl",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "connectorSyncTaskId",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "connectorAttachmentId",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "lockstepAPI",
          "value": "https://api.eu.int.lockstep.io",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "auth_audience",
          "value": "snet-dev/network/api",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "sageId_callback_url",
          "value": "https://id-shadow.sage.com/mobile",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "auth_callback_url",
          "value": "https://jwt.io",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "sageId_audience",
          "value": "SBCDS/global",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "invoiceIdBuyer",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "env",
          "value": "Sbx-Int",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "invoiceId",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "access_token",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "random_variable",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "randomVariable",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "attachmentId",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "attachmentdownloadUrl",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        }
      ],
      "name": "SNW_Int_Connector 1000FR (v1.9.3)"
    },
    {
      "variables": [
        {
          "name": "_preset_consumer_baseUrl",
          "value": "https://snd01eu.sagebankdrive.com/api/v1",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "_preset_consumer_xApplication",
          "value": "sage.integrate.myproduct",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "_preset_consumer_application_signingKey",
          "value": "16484ccc541734aa4274c80e14577348e6540ab9a7bda8063968bbd19229612f",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "_preset_consumer_bankId",
          "value": "dccab9cf-9227-41ce-969f-a1c33c75db01",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "_preset_provider_baseUrl",
          "value": "https://papi-snd01-eu-west-1.sagebanking-sandbox.cloud",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "_preset_provider_apiKey",
          "value": "JL9v0BSHIs15IKLbk1Hjp6Hs8rbmozYb15rgZDpu",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "_preset_cloudId_baseUrl",
          "value": "https://id-shadow.sage.com",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "_preset_cloudId_clientId",
          "value": "sUNQN3eH6vYxj8RBMAic6DH5hC9fLfXg",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "_preset_cloudId_clientSecret",
          "value": "sxeaUAyKsnCb_Z5JwYqlHf2cLb3bkGjeeLvREQPE6T6AyyEimq4mTUD6Alf0T1qt",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "_preset_cloudId_audience",
          "value": "sfdsbanking/sfdsBankingProvider-Pre",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "_preset_sts_baseUrl",
          "value": "https://qa.sagetokenservice.com/api/v1",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "_preset_sts_xProvider",
          "value": "integrate.my.provider",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "consumer_request_signature",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "provider_auth_cloudId",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "consumer_request_nonce",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "consumer_signature",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "consumer_jwt",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "consumer_organisationId",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "consumer_companyId",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "consumer_organisation_signingKey",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "consumer_indirectPollRoute",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "consumer_indirect_accountName",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "consumer_indirect_accountKey",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "consumer_indirect_accountIdentifier",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "consumer_indirect_bankIdentifier",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "consumer_post_bankaccount_request_body",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "consumer_bankAccountId",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "consumer_bankAccountLastTransactionId",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "uniqueId_1",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "uniqueId_2",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "statementId",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "authorisationId",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "consumer_indirect_bankAccountExternalId",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        }
      ],
      "name": "Test Bank Adele"
    },
    {
      "variables": [
        {
          "name": "_preset_consumer_baseUrl",
          "value": "https://snd01us.sagebankdrive.com/api/v1",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "_preset_consumer_xApplication",
          "value": "sage.integrate.myproduct",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "_preset_consumer_application_signingKey",
          "value": "16484ccc541734aa4274c80e14577348e6540ab9a7bda8063968bbd19229612f",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "_preset_consumer_bankId",
          "value": "92f03711-d8ce-496b-aed5-7804b240b837",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "_preset_provider_baseUrl",
          "value": "https://papi-snd01-us-east-1.sagebanking-sandbox.cloud",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "_preset_provider_apiKey",
          "value": "mXIrlmlDc39FRJFd9xII67KsD2NP8eXW4jgElqcI",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "_preset_cloudId_baseUrl",
          "value": "https://id-shadow.sage.com",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "_preset_cloudId_clientId",
          "value": "OL7rPe96NsQuZTZoyHtiVshMMoCcMali",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "_preset_cloudId_clientSecret",
          "value": "tOjiTLoGTqzLTd1OM6PbbDmO6DyiaTFuCWQRKnTF1vxpcAVPFoDF4ERCFnOSDtRe",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "_preset_cloudId_audience",
          "value": "sfdsbanking/sfdsBankingProvider-Pre",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "_preset_sts_baseUrl",
          "value": "https://qa.sagetokenservice.com/api/v1",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "_preset_sts_xProvider",
          "value": "integrate.my.provider",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "consumer_request_nonce",
          "value": "826e71cc-26ec-4e60-aca3-2b0036311cdd",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "consumer_request_signature",
          "value": "KMZVlBkUnU+SehlZ1Z1zDg4duoA=",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "consumer_organisationId",
          "value": "3cb11a44-c50e-4a29-add8-d7fd1e40d405",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "consumer_companyId",
          "value": "6e00600a-2d89-4368-9a00-3bb758730dc1",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "consumer_organisation_signingKey",
          "value": "73527ee888ff92ea6b477f34584852de4cd365eaae2a9a5140331ef220ac7ccc",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "consumer_signature",
          "value": "",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "consumer_jwt",
          "value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJvcmdhbmlzYXRpb25JZCI6IjNjYjExYTQ0LWM1MGUtNGEyOS1hZGQ4LWQ3ZmQxZTQwZDQwNSIsImNvbXBhbnlJZCI6IjZlMDA2MDBhLTJkODktNDM2OC05YTAwLTNiYjc1ODczMGRjMSIsInJlcXVlc3RlZCI6Ii9hcGkvdjEvb3JnYW5pc2F0aW9ucy8zY2IxMWE0NC1jNTBlLTRhMjktYWRkOC1kN2ZkMWU0MGQ0MDUvY29tcGFuaWVzLzZlMDA2MDBhLTJkODktNDM2OC05YTAwLTNiYjc1ODczMGRjMSIsInNvdXJjZVByb2R1Y3QiOiJzYWdlLmludGVncmF0ZS5teXByb2R1Y3QiLCJraWQiOiIwMjhiOTA0ZTEzMGM0MTI5ZTY1ZDQ3YTIwZjk4NjEyOGUwZTRlY2ZkNjcxZGQ5M2RkN2I5MTI5YTBiNWYzMTk3IiwiaXNzIjoic2FnZS5zZXJ2aWNlLWZhYnJpYy5iYW5raW5nLnVzLnNuZDAxIiwiaWF0IjoxNzU2Mzk0NjMwLCJleHAiOjE3NTYzOTU4MzB9.Qe5JJjgCBr9R6GbPZzOFrl7heGfywUIaiAYTQbnu4V5fiB_SIep5B1-WIhxsRn5SbZUxkftxAZsNgAsD3RcC6SzlZaqEIkrzAvrndbNtj1q7Jn_H63EMplKDYmFEUGGBRzFljsqHpGCq2NeQLApui9pl1ARnN_xTGh0ziBuqqIICsN5SjkSEMg-df6t9E5s4YipTRC71zOpZxiCGRkDCXU5vxXIYHz2_TTdVDqphwcwQmzekW0KqABJwBBvSpB4Kc7fXXGiMrNl81APE3yMXtphnfEeiYhyehoIgxqn5Wfii7lJ4moXuQdQHp80AMgx0zqCse9eGTA0zTmbSBwZOCg",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "consumer_indirectPollRoute",
          "value": "https://snd01us.sagebankdrive.com/api/v1/indirectlinkaccountprogress?data=bVVWc3dWYnBaNDFycVZQZ2dwMm44emFDR1RCbEk2VEliVVNXUnZ0bmxPVWVLekVQa0s2MG5nV2I2V2E2UFkyWkZpZVdQNWlBdmFSNFcyc2daWmhPeFdaUkg2TU05UjlPUHVjYXBrUGlvWnhEWnlISDVPOHRvSTZpWlBqekJiZnVWUjlqWjZ2S1pUYlBBTGIwWDBHWDhnUDBXN0g4cXRzaGxmN1UyaEQwMllYRG9IdXcvOG1mdlFsY3g2OFBHRmRzdDBvL0liMlZraThzd0tWbHo3cW52RHo4OS9EbFlCRWFPdExpaHFLTWtGWEVHN1RIYnhFb1RLU2pBcVNpN2dwaUcxZGNlU2tPN21UblBrWjN4OThzVjBUd1JTS1F2cC95QjEwYzF4Wm8reXVldktWVmlkeWtvTGptcUxleFh2NmVWaS93S0txWWpmT0RSQkFqRG9sSUNPMzY2S1RuUW52NFR5TmFPNVJCK2tjPQ==&iv=dcf9fbd790c05084b7e3799e34d43ddb&signature=d3c4576a045558718daf82c44303fae8fa6725f81023ecae485575e6488b20dd262da7a4c87a0c50fcdec78430537222b53de498edadcdec260bac253aa8e7b718c350a7758a33c7f3ed248265982587662b258fc1ccfe972f6e3332a93a8e2c952b37d9911099edc446acd4b5ac323645e4e3e1b01c04f9c38a0c1d33fe0c2fd916ee92cf1e4a31d49d1e05cd75636c7e39e038e69628ee3323909ac7c58bc93c36024815ef5ef85ad438c57bc65245f9027b522af42e5ace827c35e47f8a14784cd9bbb6c9af1fc9200b9ee8d12fb0cf579548a3c064ef9d409cb4d5bdbf93429d067098072036781b09a21e3c36b618d2811a4d50f2c99f8b11af3cb6b9cc&nonce=12cf684f-e19f-4823-815c-cf0db5a946b9",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "provider_auth_cloudId",
          "value": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IlJVUXlRME0wTWtOQk5rUkJOVGxETXpaQ056VXhPVVUyUkRZNU5EbEJOVVF6T0VSQk1EQXdNQSJ9.eyJpc3MiOiJodHRwczovL2lkLXNoYWRvdy5zYWdlLmNvbS8iLCJzdWIiOiJPTDdyUGU5Nk5zUXVaVFpveUh0aVZzaE1Nb0NjTWFsaUBjbGllbnRzIiwiYXVkIjoic2Zkc2Jhbmtpbmcvc2Zkc0JhbmtpbmdQcm92aWRlci1QcmUiLCJpYXQiOjE3NTYzOTUyMzgsImV4cCI6MTc1NjQyNDAzOCwic2NvcGUiOiJQcm92aWRlckFwaSIsImd0eSI6ImNsaWVudC1jcmVkZW50aWFscyIsImF6cCI6Ik9MN3JQZTk2TnNRdVpUWm95SHRpVnNoTU1vQ2NNYWxpIn0.1mYBlDUCV98ovqAGSLcNMjRoXaNA3_Pnj4eLhb_lS1Yxci5jcfiFtbRqFxoFMBR5W-LIJjhSIJK-KwguIN9d7PwYiLOFLZZcL3H3lJq3-K4X_20RnTQPOjN1pE5D_0gd4M-89-MXImsj1eOuuM7l4Aam71uUtH3RJeiQgzGuGpQByz4OmNnrYS8NX1ym0LRQf6WeOW44InSEoP3N2nb0ULRlVaD-9opBeO4QgZvrF3YhwvJbWBpsP5uBcNG887kJDM-YGl9NNArI-Pob3Kg3_fNDxLjLM8Z9iqiFoTDC18KC8rBXdIWxRPOiUR899_wLshlBEbPZCTr6S4m7XRwHWA",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "consumer_indirect_accountName",
          "value": "Savings Account",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "consumer_indirect_accountKey",
          "value": "382fcc36-ef37-4fcc-89b7-285291a5fb4c",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "consumer_indirect_accountIdentifier",
          "value": "1342567",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "consumer_indirect_bankIdentifier",
          "value": "1000",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "consumer_indirect_bankAccountExternalId",
          "value": "RTAwMDoxF2==",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "uniqueId_1",
          "value": "ed437a6e-424b-811c-ece7-9a83b268692c",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "uniqueId_2",
          "value": "b7ecf350-d2f8-7c67-6635-f6c6a2d909dd",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "consumer_bankAccountLastTransactionId",
          "value": 1,
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "consumer_post_bankaccount_request_body",
          "value": "{\"accountType\":\"DEBIT\",\"accountName\":\"Savings Account\",\"accountKey\":\"382fcc36-ef37-4fcc-89b7-285291a5fb4c\",\"accountIdentifier\":\"1342567\",\"bankIdentifier\":\"1000\",\"branchIdentifier\":\"Newcastle\",\"defaultCurrency\":\"GBP\",\"bankId\":\"92f03711-d8ce-496b-aed5-7804b240b837\",\"requestedStartDate\":\"2017-06-30T00:00:00.000Z\"}",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "consumer_bankAccountId",
          "value": "33f604fa-e943-4189-9222-71b8c30ff27e",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "statementId",
          "value": "7c6deb8a-dae5-47ce-a175-368df7780dff",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "authentication_page_reauth",
          "value": "https://snd01us.sagebankdrive.com/api/v1/indirectauth?data=a0QrK2k5TTRmVHpVRmZUbjFPeXdiYXBVY01UTmlORXRFU2htTXBmUDZ2ZjVZMHQrcWYyejZyanJndzY3ZWJXdDRtZVNKNDJZR0x4cWJvYU1YdWhZZ091bncwcWZpTCs5WHFNQTczUDlzU29UZFA0TkZQcFQ1MldhTm9XUTdkdzUrV0VBUjhiRU0ybEdGSG5FSkU0dy80ZWk3WGZNL211aXhTUFBrQk9aTU54SHBNMzZSWmcrdlhYMUtmSnJjcDM2dmx0VnUwd3N6Um9ZM0ZYdUNqblNYWFgyUnBkUDV4NWcwYnFCcEFXczMwSTJRRHQrcFJsalhqM1RNQjlSZ05SR21FYXAxcVhNT1B5WDZPZjg2SE92aGt6V29xVmtrUE9jUFMwRVhlVmVHZXZmOUNwNStlczluWm9Jbmx4QmQrbWRxQnh6RkUyRDFYcDNqVGF3dm83Rk11VTh1MUpvd0dkMDV6cGRPalJkK1RBPQ==&iv=ff0ce1aa42a53fb9dbeb17f88cd7d3ca&signature=5b52eba85fba6cdfa5288b3767aa9f5670b467a449dd9d203335e9e0c2173377f0cd68c76de577f2b4c828e2206b23d9c540406143a63000cb49fe6b455218013996b6b4d29dd78a86eaa2b4f49915c4adb81f8826b2088f9637c90b4eaef258ad9075f625d0eca90f5cc45b2dea3bccb7008b975829304500aa5ee1d4ffb7f5bf5386f4b128ebaec8462eeb818416251f5305765df6e5a287dd7c3dcd6f90e783a49dac65cb3ad7117deaaefc3b3201890c5f38d136b1b3cfde082077413ee0684d0a477f9c477cf6a7d5f350658966b812b8bc8decd291c962a697c4d7b01c7afee5b0ce271a7d31895bf35a06200e88f091aa516b44484789f44acc0b9407&nonce=3526c0f4-9674-41ba-94e2-5c3ca853f4eb",
          "secret": false,
          "enabled": true,
          "type": "text"
        },
        {
          "name": "bankAccountCandidateId01",
          "value": null,
          "secret": false,
          "enabled": true,
          "type": "text"
        },
        {
          "name": "bankAccountCandidateId02",
          "value": null,
          "secret": false,
          "enabled": true,
          "type": "text"
        }
      ],
      "name": "WorldFirstUSA_TEST_ENV"
    }
  ],
  "root": {
    "request": {
      "auth": {
        "mode": "none"
      }
    },
    "meta": {
      "name": "Banking Service -  Provider API"
    }
  },
  "brunoConfig": {
    "version": "1",
    "name": "Banking Service -  Provider API",
    "type": "collection",
    "ignore": [
      "node_modules",
      ".git"
    ],
    "size": 0.0957345962524414,
    "filesCount": 110
  }
}